from header_common import *
from header_scene_props import *
from header_operations import *
from header_triggers import *
from header_sounds import *
from module_constants import *
import string

####################################################################################################################
#  Each scene prop record contains the following fields:
#  1) Scene prop id: used for referencing scene props in other files. The prefix spr_ is automatically added before each scene prop id.
#  2) Scene prop flags. See header_scene_props.py for a list of available flags
#  3) Mesh name: Name of the mesh.
#  4) Physics object name:
#  5) Triggers: Simple triggers that are associated with the scene prop
####################################################################################################################

sokfs_ship_cage = sokf_type_ai_limiter3d|sokf_moveable|sokf_invisible
sokfs_ship_land_ramp = sokf_moveable|sokf_missiles_not_attached|sokf_type_ladder

check_item_use_trigger = (ti_on_scene_prop_use,
    [
      (store_trigger_param_1, ":agent_id"),
      (store_trigger_param_2, ":instance_id"),
      
      #for only server itself-----------------------------------------------------------------------------------------------
      (call_script, "script_use_item", ":instance_id", ":agent_id"),
      #for only server itself-----------------------------------------------------------------------------------------------
      (get_max_players, ":num_players"),                               
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server so starting from 1
        (player_is_active, ":player_no"),
        (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_use_item, ":instance_id", ":agent_id"),
      (try_end),
    ])

check_sally_door_use_trigger_double = (ti_on_scene_prop_use,
    [
      (store_trigger_param_1, ":agent_id"),
      (store_trigger_param_2, ":instance_id"),

      (agent_get_position, pos1, ":agent_id"),
      (prop_instance_get_starting_position, pos2, ":instance_id"),
      
      (scene_prop_get_slot, ":opened_or_closed", ":instance_id", scene_prop_open_or_close_slot),

      (try_begin),
        #out doors like castle sally door can be opened only from inside, if door coordinate is behind your coordinate. Also it can be closed from both sides.
        
        (prop_instance_get_scene_prop_kind, ":scene_prop_id", ":instance_id"),
        
        (assign, ":can_open_door", 0),
        (try_begin),
          (neg|eq, ":scene_prop_id", "spr_viking_keep_destroy_sally_door_right"),
          (neg|eq, ":scene_prop_id", "spr_viking_keep_destroy_sally_door_left"),
          (neg|eq, ":scene_prop_id", "spr_earth_sally_gate_right"),
          (neg|eq, ":scene_prop_id", "spr_earth_sally_gate_left"),
          
          (position_is_behind_position, pos1, pos2),
          (assign, ":can_open_door", 1),
        (else_try),  
          (this_or_next|eq, ":scene_prop_id", "spr_viking_keep_destroy_sally_door_right"),
          (this_or_next|eq, ":scene_prop_id", "spr_viking_keep_destroy_sally_door_left"),
          (this_or_next|eq, ":scene_prop_id", "spr_earth_sally_gate_right"),
          (eq, ":scene_prop_id", "spr_earth_sally_gate_left"),

          (neg|position_is_behind_position, pos1, pos2),
          (assign, ":can_open_door", 1),
        (try_end),
        
        (this_or_next|eq, ":can_open_door", 1),
        (eq, ":opened_or_closed", 1),
      
        (try_begin),
          #for only server itself-----------------------------------------------------------------------------------------------
          (call_script, "script_use_item", ":instance_id", ":agent_id"),
          #for only server itself-----------------------------------------------------------------------------------------------
          (get_max_players, ":num_players"),                               
          (try_for_range, ":player_no", 1, ":num_players"), #0 is server so starting from 1
            (player_is_active, ":player_no"),
            (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_use_item, ":instance_id", ":agent_id"),
          (try_end),
        (try_end),
      (try_end),
    ])

check_sally_door_use_trigger = (ti_on_scene_prop_use,
    [
      (store_trigger_param_1, ":agent_id"),
      (store_trigger_param_2, ":instance_id"),

      (agent_get_position, pos1, ":agent_id"),
      (prop_instance_get_starting_position, pos2, ":instance_id"),
      
      (scene_prop_get_slot, ":opened_or_closed", ":instance_id", scene_prop_open_or_close_slot),

      (try_begin),
        #out doors like castle sally door can be opened only from inside, if door coordinate is behind your coordinate. Also it can be closed from both sides.
        (this_or_next|position_is_behind_position, pos1, pos2),
        (eq, ":opened_or_closed", 1),
      
        (try_begin),
          #for only server itself-----------------------------------------------------------------------------------------------
          (call_script, "script_use_item", ":instance_id", ":agent_id"),
          #for only server itself-----------------------------------------------------------------------------------------------
          (get_max_players, ":num_players"),                               
          (try_for_range, ":player_no", 1, ":num_players"), #0 is server so starting from 1
            (player_is_active, ":player_no"),
            (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_use_item, ":instance_id", ":agent_id"),
          (try_end),
        (try_end),
      (try_end),
    ])

check_castle_door_use_trigger = (ti_on_scene_prop_use,
    [
      (store_trigger_param_1, ":agent_id"),
      (store_trigger_param_2, ":instance_id"),

      (agent_get_position, pos1, ":agent_id"),
      (prop_instance_get_starting_position, pos2, ":instance_id"),
      
      (scene_prop_get_slot, ":opened_or_closed", ":instance_id", scene_prop_open_or_close_slot),

      (try_begin),
        (ge, ":agent_id", 0),
        (agent_get_team, ":agent_team", ":agent_id"),

        #in doors like castle room doors can be opened from both sides, but only defenders can open these doors. Also it can be closed from both sides.
        (this_or_next|eq, ":agent_team", 0),
        (eq, ":opened_or_closed", 1),
      
        (try_begin),
          #for only server itself-----------------------------------------------------------------------------------------------
          (call_script, "script_use_item", ":instance_id", ":agent_id"),
          #for only server itself-----------------------------------------------------------------------------------------------
          (get_max_players, ":num_players"),                               
          (try_for_range, ":player_no", 1, ":num_players"), #0 is server so starting from 1
            (player_is_active, ":player_no"),
            (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_use_item, ":instance_id", ":agent_id"),
          (try_end),
        (try_end),
      (try_end),
    ])

check_ladder_animate_trigger = (ti_on_scene_prop_is_animating,
    [      
      (store_trigger_param_1, ":instance_id"),
      (store_trigger_param_2, ":remaining_time"),

      (call_script, "script_check_creating_ladder_dust_effect", ":instance_id", ":remaining_time"),
      ])

check_ladder_animation_finish_trigger = (ti_on_scene_prop_animation_finished,
    [
      (store_trigger_param_1, ":instance_id"),

      (prop_instance_enable_physics, ":instance_id", 1),
      ])
	  
check_ship_hit_trigger = (ti_on_scene_prop_hit,
    [
      (play_sound, "snd_dummy_hit"),
	  #(play_sound_at_position, <sound_id>, <position_no>, [options]),	#???
      (particle_system_burst, "psys_dummy_smoke", pos1, 3),
      (particle_system_burst, "psys_dummy_straw", pos1, 10),     
      ])

check_ship_burn_trigger = (ti_on_scene_prop_hit,
    [
	  (play_sound, "snd_dummy_hit"),
	  (store_trigger_param_1, ":instance_no"), 
	  (prop_instance_get_position, pos2, ":instance_no"),
	  (position_transform_position_to_local, pos3, pos2, pos1),
      (prop_instance_add_particle_system, ":instance_no", "psys_fireplace_fire_big", pos3),     
      ])
	  
scene_props = [
  ("invalid_object",0,"question_mark","0", []),
  ("inventory",sokf_type_container|sokf_place_at_origin,"chest_b","bobaggage", []),#missing "package" mesh
  ("empty", 0, "0", "0", []),
  ("chest_a",sokf_type_container,"chest_gothic","bochest_gothic", []),
  ("container_small_chest",sokf_type_container,"chest_b","bobaggage", []),#missing "package" mesh
  ("container_chest_b",sokf_type_container,"chest_b","bo_chest_b", []),
  ("container_chest_c",sokf_type_container,"chest_c","bo_chest_c", []),
  ("player_chest",sokf_type_container,"player_chest","bo_player_chest", []),
  ("locked_player_chest",0,"player_chest","bo_player_chest", []),

  ("light_sun",sokf_invisible,"light_sphere","0",  [
     (ti_on_init_scene_prop,
      [
          (neg|is_currently_night),
          (store_trigger_param_1, ":prop_instance_no"),
          (set_fixed_point_multiplier, 100),
          (prop_instance_get_scale, pos5, ":prop_instance_no"),
          (position_get_scale_x, ":scale", pos5),
          (store_time_of_day,reg(12)),
          (try_begin),
            (is_between,reg(12),5,20),
            (store_mul, ":red", 5 * 200, ":scale"),
            (store_mul, ":green", 5 * 193, ":scale"),
            (store_mul, ":blue", 5 * 180, ":scale"),
          (else_try),
            (store_mul, ":red", 5 * 90, ":scale"),
            (store_mul, ":green", 5 * 115, ":scale"),
            (store_mul, ":blue", 5 * 150, ":scale"),
          (try_end),
          (val_div, ":red", 100),
          (val_div, ":green", 100),
          (val_div, ":blue", 100),
          (set_current_color,":red", ":green", ":blue"),
          (set_position_delta,0,0,0),
          (add_point_light_to_entity, 0, 0),
      ]),
    ]),
  ("light",sokf_invisible,"light_sphere","0",  [
     (ti_on_init_scene_prop,
      [
          (store_trigger_param_1, ":prop_instance_no"),
          (set_fixed_point_multiplier, 100),
          (prop_instance_get_scale, pos5, ":prop_instance_no"),
          (position_get_scale_x, ":scale", pos5),
          (store_mul, ":red", 3 * 200, ":scale"),
          (store_mul, ":green", 3 * 145, ":scale"),
          (store_mul, ":blue", 3 * 45, ":scale"),
          (val_div, ":red", 100),
          (val_div, ":green", 100),
          (val_div, ":blue", 100),
          (set_current_color,":red", ":green", ":blue"),
          (set_position_delta,0,0,0),
          (add_point_light_to_entity, 10, 30),
      ]),
    ]),
  ("light_red",sokf_invisible,"light_sphere","0",  [
     (ti_on_init_scene_prop,
      [
          (store_trigger_param_1, ":prop_instance_no"),
          (set_fixed_point_multiplier, 100),
          (prop_instance_get_scale, pos5, ":prop_instance_no"),
          (position_get_scale_x, ":scale", pos5),
          (store_mul, ":red", 2 * 170, ":scale"),
          (store_mul, ":green", 2 * 100, ":scale"),
          (store_mul, ":blue", 2 * 30, ":scale"),
          (val_div, ":red", 100),
          (val_div, ":green", 100),
          (val_div, ":blue", 100),
          (set_current_color,":red", ":green", ":blue"),
          (set_position_delta,0,0,0),
          (add_point_light_to_entity, 20, 30),
      ]),
    ]),
  ("light_night",sokf_invisible,"light_sphere","0",  [
     (ti_on_init_scene_prop,
      [
#          (store_time_of_day,reg(12)),
#          (neg|is_between,reg(12),5,20),
          (is_currently_night, 0),
          (store_trigger_param_1, ":prop_instance_no"),
          (set_fixed_point_multiplier, 100),
          (prop_instance_get_scale, pos5, ":prop_instance_no"),
          (position_get_scale_x, ":scale", pos5),
          (store_mul, ":red", 3 * 160, ":scale"),
          (store_mul, ":green", 3 * 145, ":scale"),
          (store_mul, ":blue", 3 * 100, ":scale"),
          (val_div, ":red", 100),
          (val_div, ":green", 100),
          (val_div, ":blue", 100),
          (set_current_color,":red", ":green", ":blue"),
          (set_position_delta,0,0,0),
          (add_point_light_to_entity, 10, 30),
      ]),
    ]),
  ("torch",0,"torch_a","0",
   [
   (ti_on_init_scene_prop,
    [
        (set_position_delta,0,-35,48),
        (particle_system_add_new, "psys_torch_fire"),
        (particle_system_add_new, "psys_torch_smoke"),
        (particle_system_add_new, "psys_torch_fire_sparks"),

        (play_sound, "snd_torch_loop", 0),
        
        (set_position_delta,0,-35,56),
        (particle_system_add_new, "psys_fire_glow_1"),
#        (particle_system_emit, "psys_fire_glow_1",9000000),

#second method        
        (get_trigger_object_position, pos2),
        (set_position_delta,0,0,0),
        (position_move_y, pos2, -35),

        (position_move_z, pos2, 55),
        (particle_system_burst, "psys_fire_glow_fixed", pos2, 1),
    ]),
   ]),
  ("torch_night",0,"torch_a","0",
   [
   (ti_on_init_scene_prop,
    [
#        (store_time_of_day,reg(12)),
#        (neg|is_between,reg(12),5,20),
        (is_currently_night, 0),
        (set_position_delta,0,-35,48),
        (particle_system_add_new, "psys_torch_fire"),
        (particle_system_add_new, "psys_torch_smoke"),
        (particle_system_add_new, "psys_torch_fire_sparks"),
        (set_position_delta,0,-35,56),
        (particle_system_add_new, "psys_fire_glow_1"),
        (particle_system_emit, "psys_fire_glow_1",9000000),
        (play_sound, "snd_torch_loop", 0),
    ]),
   ]),
#  ("Baggage",sokf_place_at_origin|sokf_entity_body,"package","bobaggage"),
  ("barrier_20m",sokf_invisible|sokf_type_barrier,"barrier_20m","bo_barrier_20m", []),
  ("barrier_16m",sokf_invisible|sokf_type_barrier,"barrier_16m","bo_barrier_16m", []),
  ("barrier_8m" ,sokf_invisible|sokf_type_barrier,"barrier_8m" ,"bo_barrier_8m" , []),
  ("barrier_4m" ,sokf_invisible|sokf_type_barrier,"barrier_4m" ,"bo_barrier_4m" , []),
  ("barrier_2m" ,sokf_invisible|sokf_type_barrier,"barrier_2m" ,"bo_barrier_2m" , []),
  
  ("exit_4m" ,sokf_invisible|sokf_type_barrier_leave,"barrier_4m" ,"bo_barrier_4m" , []),
  ("exit_8m" ,sokf_invisible|sokf_type_barrier_leave,"barrier_8m" ,"bo_barrier_8m" , []),
  ("exit_16m" ,sokf_invisible|sokf_type_barrier_leave,"barrier_16m" ,"bo_barrier_16m" , []),

  ("ai_limiter_2m" ,sokf_invisible|sokf_type_ai_limiter,"barrier_2m" ,"bo_barrier_2m" , []),
  ("ai_limiter_4m" ,sokf_invisible|sokf_type_ai_limiter,"barrier_4m" ,"bo_barrier_4m" , []),
  ("ai_limiter_8m" ,sokf_invisible|sokf_type_ai_limiter,"barrier_8m" ,"bo_barrier_8m" , []),
  ("ai_limiter_16m",sokf_invisible|sokf_type_ai_limiter,"barrier_16m","bo_barrier_16m", []),
  ("Shield",sokf_dynamic,"0","boshield", []),
  ("shelves",0,"shelves","boshelves", []),
  ("table_tavern",0,"table_tavern","botable_tavern", []),
  ("table_castle_a",0,"table_castle_a","bo_table_castle_a", []),
  ("chair_castle_a",0,"chair_castle_a","bo_chair_castle_a", []),

  ("pillow_a",0,"question_mark","0", []),
  ("pillow_b",0,"question_mark","0", []),
  ("pillow_c",0,"pillow_c","0", []),


  ("interior_castle_g_square_keep_b",0,"question_mark","0", []),



  ("carpet_with_pillows_a",0,"question_mark","0", []),
  ("carpet_with_pillows_b",0,"question_mark","0", []),
  ("table_round_a",0,"table_round_a","bo_table_round_a", []),
  ("table_round_b",0,"table_round_b","bo_table_round_b", []),
  ("fireplace_b",0,"fireplace_b","bo_fireplace_b", []),
  ("fireplace_c",0,"fireplace_c","bo_fireplace_c", []),

  ("sofa_a",0,"question_mark","0", []),
  ("sofa_b",0,"question_mark","0", []),
  ("ewer_a",0,"ewer_a","bo_ewer_a", []),
  ("end_table_a",0,"end_table_a","bo_end_table_a", []),


  ("fake_houses_steppe_a",0,"question_mark","0", []),
  ("fake_houses_steppe_b",0,"question_mark","0", []),
  ("fake_houses_steppe_c",0,"question_mark","0", []),

  ("boat_destroy",0,"boat_destroy","bo_boat_destroy", []),
  ("destroy_house_a",0,"destroy_house_a","bo_destroy_house_a", []),
  ("destroy_house_b",0,"destroy_house_b","bo_destroy_house_b", []),
  ("destroy_house_c",0,"destroy_house_c","bo_destroy_house_c", []),
  ("destroy_heap",0,"destroy_heap","bo_destroy_heap", []),
  ("destroy_castle_a",0,"destroy_castle_a","bo_destroy_castle_a", []),
  ("destroy_castle_b",0,"destroy_castle_b","bo_destroy_castle_b", []),
  
  ("destroy_castle_c",0,"destroy_castle_c","bo_destroy_castle_c", []),
  
  ("destroy_castle_d",0,"destroy_castle_d","bo_destroy_castle_d", []),
  ("destroy_windmill",0,"destroy_windmill","bo_destroy_windmill", []),
  ("destroy_tree_a",0,"destroy_tree_a","bo_destroy_tree_a", []),
  ("destroy_tree_b",0,"destroy_tree_b","bo_destroy_tree_b", []),  
  ("destroy_bridge_a",0,"destroy_bridge_a","bo_destroy_bridge_a", []),  
  ("destroy_bridge_b",0,"destroy_bridge_b","bo_destroy_bridge_b", []),  


  ("catapult",0,"question_mark","0", []),
  
  ("catapult_destructible",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible,"question_mark","0", [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 1600),
    ]),
     
   (ti_on_scene_prop_destroy,
    [          
      (play_sound, "snd_dummy_destroyed"),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),


        (store_trigger_param_1, ":instance_no"),      
        (prop_instance_get_position, pos1, ":instance_no"),
        (particle_system_burst, "psys_dummy_smoke_big", pos1, 100),
        (particle_system_burst, "psys_dummy_straw_big", pos1, 100),      
        (position_move_z, pos1, -500),
        (position_rotate_x, pos1, 90),
        (prop_instance_animate_to_position, ":instance_no", pos1, 300), #animate to 6 meters below in 6 second

        (try_begin),
          (eq, "$g_round_ended", 0),
          (scene_prop_get_team, ":scene_prop_team_no", ":instance_no"),
          (try_begin),
            (eq, ":scene_prop_team_no", 0),
            (assign, ":scene_prop_team_no_multiplier", -1), 
          (else_try),
            (assign, ":scene_prop_team_no_multiplier", 1), 
          (try_end),

          (try_begin),
            (eq, "$g_number_of_targets_destroyed", 0),        
            (store_mul, ":target_no_mul_scene_prop_team", ":scene_prop_team_no_multiplier", 1), #1 means destroyed object is a catapult
            #for only server itself-----------------------------------------------------------------------------------------------                                                                                                      
            (call_script, "script_show_multiplayer_message", multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            #for only server itself-----------------------------------------------------------------------------------------------     
            (get_max_players, ":num_players"),                               
            (try_for_range, ":player_no", 1, ":num_players"),
              (player_is_active, ":player_no"),
              (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_show_multiplayer_message, multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            (try_end),
            (val_add, "$g_number_of_targets_destroyed", 1),
          (else_try),
            (store_mul, ":target_no_mul_scene_prop_team", ":scene_prop_team_no_multiplier", 9), #9 means attackers destroyed all targets
            #for only server itself-----------------------------------------------------------------------------------------------      
            (call_script, "script_show_multiplayer_message", multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            #for only server itself-----------------------------------------------------------------------------------------------     
            (get_max_players, ":num_players"),                               
            (try_for_range, ":player_no", 1, ":num_players"),
              (player_is_active, ":player_no"),
              (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_show_multiplayer_message, multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            (try_end),
            (val_add, "$g_number_of_targets_destroyed", 1),
          (try_end),
        (try_end),
      (try_end),
    ]),     

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),
    ]),
  ]),
  
  ("broom",0,"broom","0", []),
  ("garlic",0,"garlic","0", []),
  ("garlic_b",0,"garlic_b","0", []),

  ("destroy_a",0,"destroy_a","0", []),
  ("destroy_b",0,"destroy_b","0", []),



  ("bridge_wooden",0,"bridge_wooden","bo_bridge_wooden", []),
  ("bridge_wooden_snowy",0,"question_mark","0", []),
  
  ("grave_a",0,"grave_a","bo_grave_a", []),

  
  ("village_house_e",0,"village_house_e","bo_village_house_e", []),
  ("village_house_f",0,"village_house_f","bo_village_house_f", []),
  ("village_house_g",0,"question_mark","0", []),
  ("village_house_h",0,"question_mark","0", []),
  ("village_house_i",0,"question_mark","0", []),
  ("village_house_j",0,"question_mark","0", []),
  ("village_wall_a",0,"village_wall_a","bo_village_wall_a", []),
  ("village_wall_b",0,"village_wall_b","bo_village_wall_b", []),

  ("village_snowy_house_a",0,"question_mark","0", []),  
  ("village_snowy_house_b",0,"question_mark","0", []),
  ("village_snowy_house_c",0,"question_mark","0", []),
  ("village_snowy_house_d",0,"question_mark","0", []),
  ("village_snowy_house_e",0,"question_mark","0", []),
  ("village_snowy_house_f",0,"question_mark","0", []),



  ("town_house_steppe_a",0,"question_mark","0", []),
  ("town_house_steppe_b",0,"question_mark","0", []),
  ("town_house_steppe_c",0,"question_mark","0", []),
  ("town_house_steppe_d",0,"question_mark","0", []),
  ("town_house_steppe_e",0,"question_mark","0", []),
  ("town_house_steppe_f",0,"question_mark","0", []),
  ("town_house_steppe_g",0,"question_mark","0", []),
  ("town_house_steppe_h",0,"question_mark","0", []),
  ("town_house_steppe_i",0,"question_mark","0", []),

####adorno chief house
  ("ado_saxon_house_large",0,"ado_saxon_house_large","bo_ado_saxon_house_large", []),
  ("ado_saxon_house_large_2",0,"ado_saxon_house_large_2","bo_ado_saxon_house_large_2", []),
  ("ado_saxon_house_medium_wood",0,"ado_saxon_house_medium_wood","bo_ado_saxon_house_medium_wood", []),
  ("ado_saxon_house_medium_wattle",0,"ado_saxon_house_medium_wattle","bo_ado_saxon_house_medium_wattle", []),
  ("ado_saxon_house_medium_wattle_2",0,"ado_saxon_house_medium_wattle_2","bo_ado_saxon_house_medium_wattle_2", []),
  ("ado_saxon_house_medium_wattle_with_interior",0,"ado_saxon_house_medium_wattle_with_interior","bo_ado_saxon_house_medium_wattle_with_interior", []),
  ("ado_saxon_house_simple",0,"ado_saxon_house_simple","bo_ado_saxon_house_simple", []),
  ("ado_saxon_house_simple_variant",0,"ado_saxon_house_simple_variant","bo_ado_saxon_house_simple_variant", []),

  ("new_saxon_house_large",0,"new_saxon_house_large","bo_new_saxon_house_large", []),
  ("new_saxon_house_large_2",0,"new_saxon_house_large_2","bo_new_saxon_house_large_2", []),
  ("new_saxon_house_large_3",0,"new_saxon_house_large_3","bo_new_saxon_house_large_3", []),
  ("new_saxon_house_large_4",0,"new_saxon_house_large_4","bo_new_saxon_house_large_4", []),
  ("new_saxon_house_large_5",0,"new_saxon_house_large_5","bo_new_saxon_house_large_5", []),
  ("new_saxon_house_large_6",0,"new_saxon_house_large_6","bo_new_saxon_house_large_6", []),
  ("new_saxon_house_large_7",0,"new_saxon_house_large_7","bo_new_saxon_house_large_7", []),
  ("new_saxon_house_large_8",0,"new_saxon_house_large_8","bo_new_saxon_house_large_8", []),
  ("new_saxon_house_large_9",0,"new_saxon_house_large_9","bo_new_saxon_house_large_9", []),
  ("new_saxon_house_large_10",0,"new_saxon_house_large_10","bo_new_saxon_house_large_10", []),
  ("new_saxon_house_large_11",0,"new_saxon_house_large_11","bo_new_saxon_house_large_11", []),
  ("new_saxon_house_large_12",0,"new_saxon_house_large_12","bo_new_saxon_house_large_12", []),

  ("new_saxon_house_medium_wood",0,"new_saxon_house_medium_wood","bo_new_saxon_house_medium_wood", []),
  ("new_saxon_house_medium_wood_2",0,"new_saxon_house_medium_wood_2","bo_new_saxon_house_medium_wood_2", []),
  ("new_saxon_house_medium_wood_3",0,"new_saxon_house_medium_wood_3","bo_new_saxon_house_medium_wood_3", []),
  ("new_saxon_house_medium_wood_4",0,"new_saxon_house_medium_wood_4","bo_new_saxon_house_medium_wood_4", []),
  ("new_saxon_house_medium_wood_5",0,"new_saxon_house_medium_wood_5","bo_new_saxon_house_medium_wood_5", []),
  ("new_saxon_house_medium_wood_6",0,"new_saxon_house_medium_wood_6","bo_new_saxon_house_medium_wood_6", []),

  ("new_saxon_hall_great",0,"new_saxon_hall_great","bo_new_saxon_hall_great", []),
  ("new_saxon_hall_great_2",0,"new_saxon_hall_great_2","bo_new_saxon_hall_great_2", []),
  ("new_saxon_hall_great_3",0,"new_saxon_hall_great_3","bo_new_saxon_hall_great_3", []),
  ("new_saxon_hall_great_4",0,"new_saxon_hall_great_4","bo_new_saxon_hall_great_4", []),
  ("new_saxon_hall_great_5",0,"new_saxon_hall_great_5","bo_new_saxon_hall_great_5", []),
  ("new_saxon_hall_great_6",0,"new_saxon_hall_great_6","bo_new_saxon_hall_great_6", []),

  ("new_saxon_house_medium_wattle",0,"new_saxon_house_medium_wattle","bo_new_saxon_house_medium_wattle", []),
  ("new_saxon_house_medium_wattle_2",0,"new_saxon_house_medium_wattle_2","bo_new_saxon_house_medium_wattle_2", []),
  ("new_saxon_house_medium_wattle_3",0,"new_saxon_house_medium_wattle_3","bo_new_saxon_house_medium_wattle_3", []),
  ("new_saxon_house_medium_wattle_4",0,"new_saxon_house_medium_wattle_4","bo_new_saxon_house_medium_wattle_4", []),
  ("new_saxon_house_medium_wattle_5",0,"new_saxon_house_medium_wattle_5","bo_new_saxon_house_medium_wattle_5", []),
  ("new_saxon_house_medium_wattle_6",0,"new_saxon_house_medium_wattle_6","bo_new_saxon_house_medium_wattle_6", []),
  ("new_saxon_house_medium_wattle_7",0,"new_saxon_house_medium_wattle_7","bo_new_saxon_house_medium_wattle_7", []),
  ("new_saxon_house_medium_wattle_8",0,"new_saxon_house_medium_wattle_8","bo_new_saxon_house_medium_wattle_8", []),
  ("new_saxon_house_medium_wattle_with_interior",0,"new_saxon_house_medium_wattle_with_interior","bo_new_saxon_house_medium_wattle_with_interior", []),

  ("new_saxon_grubenhaus",0,"new_saxon_grubenhaus","bo_new_saxon_grubenhaus", []),
  ("new_saxon_grubenhaus_2",0,"new_saxon_grubenhaus_2","bo_new_saxon_grubenhaus_2", []),
  ("new_saxon_grubenhaus_3",0,"new_saxon_grubenhaus_3","bo_new_saxon_grubenhaus_3", []),
  ("new_saxon_grubenhaus_4",0,"new_saxon_grubenhaus_4","bo_new_saxon_grubenhaus_4", []),
  ("new_saxon_grubenhaus_5",0,"new_saxon_grubenhaus_5","bo_new_saxon_grubenhaus_5", []),
  ("new_saxon_grubenhaus_6",0,"new_saxon_grubenhaus_6","bo_new_saxon_grubenhaus_6", []),
  ("new_saxon_grubenhaus_7",0,"new_saxon_grubenhaus_7","bo_new_saxon_grubenhaus_7", []),
  ("new_saxon_grubenhaus_8",0,"new_saxon_grubenhaus_8","bo_new_saxon_grubenhaus_8", []),
  ("new_saxon_grubenhaus_9",0,"new_saxon_grubenhaus_9","bo_new_saxon_grubenhaus_9", []),
  ("new_saxon_grubenhaus_10",0,"new_saxon_grubenhaus_10","bo_new_saxon_grubenhaus_10", []),
  ("new_saxon_grubenhaus_11",0,"new_saxon_grubenhaus_11","bo_new_saxon_grubenhaus_11", []),
  ("new_saxon_grubenhaus_12",0,"new_saxon_grubenhaus_12","bo_new_saxon_grubenhaus_12", []),

  ("ado_saxon_house_simple_wattle",0,"ado_saxon_house_simple_wattle","bo_ado_saxon_house_simple_wattle", []),
  ("ado_saxon_house_simple_wattle_variant",0,"ado_saxon_house_simple_wattle_variant","bo_ado_saxon_house_simple_wattle_variant", []),
  ("ado_saxon_house_simple_daub",0,"ado_saxon_house_simple_daub","bo_ado_saxon_house_simple_daub", []),
  ("ado_saxon_house_simple_daub_variant",0,"ado_saxon_house_simple_daub_variant","bo_ado_saxon_house_simple_daub_variant", []),
  ("ado_saxon_house_simple_daub_2",0,"ado_saxon_house_simple_daub_2","bo_ado_saxon_house_simple_daub_2", []),
  ("ado_saxon_house_simple_daub_2_variant",0,"ado_saxon_house_simple_daub_2_variant","bo_ado_saxon_house_simple_daub_2_variant", []),
  ("ado_saxon_house_small_wood",0,"ado_saxon_house_small_wood","bo_ado_saxon_house_small_wood", []),
  ("ado_saxon_house_small_wood_variant",0,"ado_saxon_house_small_wood_variant","bo_ado_saxon_house_small_wood_variant", []),
  ("ado_saxon_house_small_wattle_1",0,"ado_saxon_house_small_wattle_1","bo_ado_saxon_house_small_wattle_1", []),

  ("new_saxon_hall_large",0,"new_saxon_hall_large","bo_new_saxon_hall_large", []),
  ("new_saxon_hall_large_2",0,"new_saxon_hall_large_2","bo_new_saxon_hall_large_2", []),
  ("new_saxon_hall_large_3",0,"new_saxon_hall_large_3","bo_new_saxon_hall_large_3", []),
  ("new_saxon_hall_large_4",0,"new_saxon_hall_large_4","bo_new_saxon_hall_large_4", []),
  ("new_saxon_hall_large_5",0,"new_saxon_hall_large_5","bo_new_saxon_hall_large_5", []),
  ("new_saxon_hall_large_6",0,"new_saxon_hall_large_6","bo_new_saxon_hall_large_6", []),
  ("new_saxon_hall_large_7",0,"new_saxon_hall_large_7","bo_new_saxon_hall_large_7", []),
  ("new_saxon_hall_large_8",0,"new_saxon_hall_large_8","bo_new_saxon_hall_large_8", []),

  ("ado_saxon_house_small_wattle_2",0,"ado_saxon_house_small_wattle_2","bo_ado_saxon_house_small_wattle_2", []),
  ("ado_saxon_house_small_wattle_2_variant",0,"ado_saxon_house_small_wattle_2_variant","bo_ado_saxon_house_small_wattle_2_variant", []),
  ("ado_saxon_grubenhaus",0,"ado_saxon_grubenhaus","bo_ado_saxon_grubenhaus", []),
  ("ado_saxon_grubenhaus_variant",0,"ado_saxon_grubenhaus_variant","bo_ado_saxon_grubenhaus_variant", []),
  ("ado_saxon_grubenhaus_wattle",0,"ado_saxon_grubenhaus_wattle","bo_ado_saxon_grubenhaus_wattle", []),
  ("ado_saxon_grubenhaus_wattle_variant",0,"ado_saxon_grubenhaus_wattle_variant","bo_ado_saxon_grubenhaus_wattle_variant", []),
  ("ado_saxon_hall_great",0,"ado_saxon_hall_great","bo_ado_saxon_hall_great", []),
  ("ado_saxon_hall_large",0,"ado_saxon_hall_large","bo_ado_saxon_hall_large", []),
  ("ado_saxon_hall_large_daub",0,"ado_saxon_hall_large_daub","bo_ado_saxon_hall_large_daub", []),

  ("ado_saxon_gatehouse",0,"ado_saxon_gatehouse","bo_ado_saxon_gatehouse", []),
  ("ado_saxon_tower_with_roof",0,"ado_saxon_tower_with_roof","bo_ado_saxon_tower_with_roof", []),
  ("ado_saxon_tower",0,"ado_saxon_tower","bo_ado_saxon_tower", []),

  ("ado_saxon_palisade_wall_post",0,"ado_saxon_palisade_wall_post","bo_ado_saxon_palisade_wall_post", []),
  ("ado_saxon_palisade_wall_post2",0,"ado_saxon_palisade_wall_post2","bo_ado_saxon_palisade_wall_post2", []),
  ("ado_saxon_palisade_wall_plank",0,"ado_saxon_palisade_wall_plank","bo_ado_saxon_palisade_wall_plank", []),
  ("ado_saxon_palisade_wall_plank_destroy",0,"ado_saxon_palisade_wall_plank_destroy","bo_ado_saxon_palisade_wall_plank_destroy", []),
  ("ado_saxon_palisade_wall_plank_destroy2",0,"ado_saxon_palisade_wall_plank_destroy2","bo_ado_saxon_palisade_wall_plank_destroy2", []),
  ("ado_saxon_palisade_wall_long",0,"ado_saxon_palisade_wall_long","bo_ado_saxon_palisade_wall_long", []),
  ("ado_saxon_palisade_wall_medium",0,"ado_saxon_palisade_wall_medium","bo_ado_saxon_palisade_wall_medium", []),
  ("ado_saxon_palisade_wall_short",0,"ado_saxon_palisade_wall_short","bo_ado_saxon_palisade_wall_short", []),
  ("ado_saxon_palisade_wall_short_destroy",0,"ado_saxon_palisade_wall_short_destroy","bo_ado_saxon_palisade_wall_short_destroy", []), #destroy version

  ("ado_saxon_gatehouse_tall",0,"ado_saxon_gatehouse_tall","bo_ado_saxon_gatehouse_tall", []), 

#nordic
  ("ado_nordic_tower",0,"ado_nordic_tower","bo_ado_nordic_tower", []),
  ("ado_nordic_tower_left",0,"ado_nordic_tower_left","bo_ado_nordic_tower_left", []),
  ("ado_nordic_tower_right",0,"ado_nordic_tower_right","bo_ado_nordic_tower_right", []),
  ("ado_nordic_wall_defence_short",0,"ado_nordic_wall_defence_short","bo_ado_nordic_wall_defence_short", []),

  ("ado_nordic_gatehouse_gate",0,"ado_nordic_gatehouse_gate","bo_ado_nordic_gatehouse_gate", []),
#frisian
  ("ado_house_haithabu_wood",0,"ado_house_haithabu_wood","bo_ado_house_haithabu_wood", []),
  ("ado_house_haithabu_red",0,"ado_house_haithabu_red","bo_ado_house_haithabu_red", []),
  ("ado_house_haithabu_shingles",0,"ado_house_haithabu_shingles","bo_ado_house_haithabu_shingles", []),
  ("ado_house_haithabu_medium_wood",0,"ado_house_haithabu_medium_wood","bo_ado_house_haithabu_medium_wood", []),
  ("ado_house_haithabu_medium_wood2",0,"ado_house_haithabu_medium_wood2","bo_ado_house_haithabu_medium_wood2", []),
  ("ado_house_haithabu_medium_wood2_edit",0,"ado_house_haithabu_medium_wood2_edit","bo_ado_house_haithabu_medium_wood2_edit", []),
  ("ado_house_haithabu_medium_daub",0,"ado_house_haithabu_medium_daub","bo_ado_house_haithabu_medium_daub", []),
  ("ado_house_haithabu_medium_daub_edit",0,"ado_house_haithabu_medium_daub_edit","bo_ado_house_haithabu_medium_daub_edit", []),
  ("ado_house_haithabu_medium_red",0,"ado_house_haithabu_medium_red","bo_ado_house_haithabu_medium_red", []),
  ("ado_house_haithabu_medium_red_edit",0,"ado_house_haithabu_medium_red_edit","bo_ado_house_haithabu_medium_red_edit", []),
  ("ado_stable_haithabu",0,"ado_stable_haithabu","bo_ado_stable_haithabu", []),
  ("ado_house_haithabu_red_stilts",0,"ado_house_haithabu_red_stilts","bo_ado_house_haithabu_red_stilts", []),
  ("ado_house_haithabu_loam_stilts",0,"ado_house_haithabu_loam_stilts","bo_ado_house_haithabu_loam_stilts", []),
  ("ado_house_haithabu_long_daub",0,"ado_house_haithabu_long_daub","bo_ado_house_haithabu_long_daub", []),
  ("ado_house_haithabu_long_daub2",0,"ado_house_haithabu_long_daub2","bo_ado_house_haithabu_long_daub2", []),
  ("ado_house_haithabu_long_daub3",0,"ado_house_haithabu_long_daub3","bo_ado_house_haithabu_long_daub3", []),
  ("ado_house_haithabu_long_daub_simple",0,"ado_house_haithabu_long_daub_simple","bo_ado_house_haithabu_long_daub_simple", []),
  ("ado_house_haithabu_long_wood",0,"ado_house_haithabu_long_wood","bo_ado_house_haithabu_long_wood", []),
  ("ado_harbour_dorestad",0,"ado_harbour_dorestad","bo_ado_harbour_dorestad", []),
  ("ado_harbour_module_dorestad",0,"ado_harbour_module_dorestad","bo_ado_harbour_module_dorestad", []),
  ("ado_harbour_dorestad_earth",0,"ado_harbour_dorestad_earth","bo_ado_harbour_dorestad_earth", []),
  ("ado_harbour_long_dorestad",0,"ado_harbour_long_dorestad","bo_ado_harbour_long_dorestad", []),
  ("ado_harbour_long_earth_dorestad",0,"ado_harbour_long_earth_dorestad","bo_ado_harbour_long_earth_dorestad", []),
  ("ado_harbour_post_dorestad",0,"ado_harbour_post_dorestad","bo_ado_harbour_post_dorestad", []),
  ("ado_stairs_haithabu_11steps",0,"ado_stairs_haithabu_11steps","bo_ado_stairs_haithabu_11steps", []),
  ("ado_stairs_haithabu_5steps",0,"ado_stairs_haithabu_5steps","bo_ado_stairs_haithabu_5steps", []),
  ("ado_harbour_haithabu",0,"ado_harbour_haithabu","bo_ado_harbour_haithabu", []),
  ("ado_harbour_narrow_haithabu",0,"ado_harbour_narrow_haithabu","bo_ado_harbour_narrow_haithabu", []),
  ("ado_fence_haithabu",0,"ado_fence_haithabu","bo_ado_fence_haithabu", []),
  ("ado_fence_short_haithabu",0,"ado_fence_short_haithabu","bo_ado_fence_short_haithabu", []),
  ("ado_fence_post_haithabu",0,"ado_fence_post_haithabu","bo_ado_fence_post_haithabu", []),
  ("ado_palisade_mossy",0,"ado_palisade_mossy","bo_ado_palisade_mossy", []),
  ("ado_palisade_mossy_single",0,"ado_palisade_mossy_single","bo_ado_palisade_mossy_single", []),
  ("ado_plank_wall_haithabu",0,"ado_plank_wall_haithabu","bo_ado_plank_wall_haithabu", []),
  ("ado_plank_wall_haithabu2",0,"ado_plank_wall_haithabu2","bo_ado_plank_wall_haithabu2", []),

  ("ado_plank_wall_short_haithabu",0,"ado_plank_wall_short_haithabu","bo_ado_plank_wall_short_haithabu", []),
  ("ado_plank_wall_plank_haithabu",0,"ado_plank_wall_plank_haithabu","bo_ado_plank_wall_plank_haithabu", []),
  ("ado_plank_wall_plank_destroy_haithabu",0,"ado_plank_wall_plank_destroy_haithabu","bo_ado_plank_wall_plank_destroy_haithabu", []),
  ("ado_tent_haithabu",0,"ado_tent_haithabu","bo_ado_tent_haithabu", []),
  ("ado_tent_haithabu_red",0,"ado_tent_haithabu_red","bo_ado_tent_haithabu_red", []),
  ("ado_interior_house_medium_wood",0,"ado_interior_house_medium_wood","bo_ado_interior_house_medium_wood", []),
  ("ado_interior_house_medium_wood2",0,"ado_interior_house_medium_wood2","bo_ado_interior_house_medium_wood2", []),
  ("ado_interior_house_medium_loam",0,"ado_interior_house_medium_loam","bo_ado_interior_house_medium_loam", []),
  ("ado_interior_house_long_wood",0,"ado_interior_house_long_wood","bo_ado_interior_house_long_wood", []),
  ("ado_interior_house_long_loam",0,"ado_interior_house_long_loam","bo_ado_interior_house_long_loam", []),
  ("ado_interior_house_long_loam2",0,"ado_interior_house_long_loam2","bo_ado_interior_house_long_loam2", []),

  ("ado_grubenhaus_haithabu_wood",0,"ado_grubenhaus_haithabu_wood","bo_ado_grubenhaus_haithabu_wood", []),
  ("ado_grubenhaus_haithabu_loam",0,"ado_grubenhaus_haithabu_loam","bo_ado_grubenhaus_haithabu_loam", []),
  ("ado_nordic_gatehouse",0,"ado_nordic_gatehouse","bo_ado_nordic_gatehouse", []),
  ("ado_nordic_wall_defence",0,"ado_nordic_wall_defence","bo_ado_nordic_wall_defence", []),
#interior hall
  ("ado_interior_hall_large",0,"ado_interior_hall_large","bo_ado_interior_hall_large", []),
  ("ado_interior_hall_large_wood",0,"ado_interior_hall_large_wood","bo_ado_interior_hall_large_wood", []),
###adorno scene props destroy
  ("ado_nordic_wall_defence_destroy",0,"ado_nordic_wall_defence_destroy","bo_ado_nordic_wall_defence_destroy", []),
###
  ("ado_interior_hearth_wood_square",0,"ado_interior_hearth_wood_square","bo_ado_interior_hearth_wood_square", []),
  ("ado_interior_burned_log",0,"ado_interior_burned_log","bo_ado_interior_burned_log", []),
  ("ado_interior_burned_log2",0,"ado_interior_burned_log2","bo_ado_interior_burned_log2", []),
  ("ado_interior_burned_log3",0,"ado_interior_burned_log3","bo_ado_interior_burned_log3", []),
  ("ado_interior_burned_log4",0,"ado_interior_burned_log4","bo_ado_interior_burned_log4", []),
###
#tents
  ("tent01",0,"tent01","bo_tent01", []),
  ("tent02",0,"tent02","bo_tent02", []),
  ("tent03",0,"tent03","bo_tent03", []),
  ("tent04",0,"tent04","bo_tent04", []),
  ("tent05",0,"tent05","bo_tent05", []),
  ("tent06",0,"tent06","bo_tent06", []),
  ("tent07",0,"tent07","bo_tent07", []),
  ("tent08",0,"tent08","bo_tent08", []),
  ("tent09",0,"tent09","bo_tent09", []),
  ("tent10",0,"tent10","bo_tent10", []),  
#others
  ("garden01",0,"garden01","bo_garden01", []),
  ("garden02",0,"garden02","bo_garden02", []),
  ("wattle_fence_double",0,"wattle_fence_double","bo_wattle_fence_double", []),
  ("wattle_fence_double02",0,"wattle_fence_double02","bo_wattle_fence_double02", []),
  ("wattle_fence_single",0,"wattle_fence_single","bo_wattle_fence_single", []),
  ("wattle_fence_single02",0,"wattle_fence_single02","bo_wattle_fence_single02", []),
  
  ####Adorno houses chief acaba

  ("carpet_a",0,"question_mark","0", []),
  ("carpet_b",0,"question_mark","0", []),
  ("carpet_c",0,"question_mark","0", []),
  ("carpet_d",0,"question_mark","0", []),
  ("carpet_e",0,"question_mark","0", []),
  ("carpet_f",0,"question_mark","0", []),

  ("awning_a",0,"question_mark","0", []),
  ("awning_b",0,"awning_b","bo_awning", []),
  ("awning_c",0,"awning_c","bo_awning", []),
  ("awning_long",0,"awning_long","bo_awning_long", []),
  ("awning_long_b",0,"question_mark","0", []),
  ("awning_d",0,"awning_d","bo_awning_d", []),


  ("ship",0,"ship","bo_ship", []),

  ("ship_b",0,"question_mark","0", []),
  ("ship_c",0,"question_mark","0", []),



  ("ship_d",0,"question_mark","0", []),

  ("snowy_barrel_a",0,"snowy_barrel_a","bo_snowy_barrel_a", []),
  ("snowy_fence",0,"snowy_fence","bo_snowy_fence", []),
  ("snowy_wood_heap",0,"snowy_wood_heap","bo_snowy_wood_heap", []),

  ("village_snowy_stable_a",0,"question_mark","0", []),


  ("village_straw_house_a",0,"village_straw_house_a","bo_village_straw_house_a", []),
  ("village_stable_a",0,"village_stable_a","bo_village_stable_a", []),
  ("village_shed_a",0,"village_shed_a","bo_village_shed_a", []),
  ("village_shed_b",0,"question_mark","0", []),

  ("dungeon_door_cell_a",0,"dungeon_door_cell_a","bo_dungeon_door_cell_a", []),
  ("dungeon_door_cell_b",0,"question_mark","0", []),
  ("dungeon_door_entry_a",0,"dungeon_door_entry_a","bo_dungeon_door_entry_a", []),
  ("dungeon_door_entry_b",0,"dungeon_door_entry_b","bo_dungeon_door_entry_a", []),
  ("dungeon_door_entry_c",0,"dungeon_door_entry_c","bo_dungeon_door_entry_a", []),
  ("dungeon_door_direction_a",0,"dungeon_door_direction_a","bo_dungeon_door_direction_a", []),
  ("dungeon_door_direction_b",0,"dungeon_door_direction_b","bo_dungeon_door_direction_a", []),
  ("dungeon_door_stairs_a",0,"question_mark","0", []),
  ("dungeon_door_stairs_b",0,"question_mark","0", []),
  ("dungeon_bed_a",0,"dungeon_bed_a","0", []),
  ("dungeon_bed_b",0,"dungeon_bed_b","bo_dungeon_bed_b", []),
  ("torture_tool_a",0,"torture_tool_a","bo_torture_tool_a", []),
  ("torture_tool_b",0,"torture_tool_b","0", []),
  ("torture_tool_c",0,"torture_tool_c","bo_torture_tool_c", []),
  ("skeleton_head",0,"skeleton_head","0", []),
  ("skeleton_bone",0,"skeleton_bone","0", []),
  ("skeleton_a",0,"skeleton_a","bo_skeleton_a", []),
  ("dungeon_stairs_a",sokf_type_ladder,"question_mark","0", []),
  ("dungeon_stairs_b",sokf_type_ladder,"dungeon_stairs_b","bo_dungeon_stairs_a", []),
  ("dungeon_torture_room_a",0,"question_mark","0", []),
  ("dungeon_entry_a",0,"dungeon_entry_a","bo_dungeon_entry_a", []),
  ("dungeon_entry_b",0,"dungeon_entry_b","bo_dungeon_entry_b", []),
  ("dungeon_entry_c",0,"dungeon_entry_c","bo_dungeon_entry_c", []),
  ("dungeon_cell_a",0,"dungeon_cell_a","bo_dungeon_cell_a", []),
  ("dungeon_cell_b",0,"dungeon_cell_b","bo_dungeon_cell_b", []),
  ("dungeon_cell_c",0,"question_mark","0", []),
  ("dungeon_corridor_a",0,"question_mark","0", []),
  ("dungeon_corridor_b",0,"question_mark","0", []),
  ("dungeon_corridor_c",0,"question_mark","0", []),
  ("dungeon_corridor_d",0,"question_mark","0", []),
  ("dungeon_direction_a",0,"question_mark","0", []),
  ("dungeon_direction_b",0,"dungeon_direction_b","bo_dungeon_direction_a", []),
  ("dungeon_room_a",0,"dungeon_room_a","bo_dungeon_room_a", []),
  ("dungeon_tower_stairs_a",sokf_type_ladder,"question_mark","0", []),
  ("dungeon_tower_cell_a",0,"question_mark","0", []),
  ("tunnel_a",0,"tunnel_a","bo_tunnel_a", []),
  ("tunnel_salt",0,"tunnel_salt","bo_tunnel_salt", []),
  ("salt_a",0,"salt_a","bo_salt_a", []),

  ("door_destructible",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(2),"tutorial_door_a","bo_tutorial_door_a", [
    check_item_use_trigger,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 2000),
    ]),
     
   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       

    (ti_on_scene_prop_hit,
    [
      (play_sound, "snd_dummy_hit"),
      (particle_system_burst, "psys_dummy_smoke", pos1, 3),
      (particle_system_burst, "psys_dummy_straw", pos1, 10),      
    ]),
  ]),

  ("tutorial_door_a",sokf_moveable,"tutorial_door_a","bo_tutorial_door_a", []),

  ("tutorial_door_b",sokf_moveable,"tutorial_door_b","bo_tutorial_door_b", []),

  ("tutorial_flag_yellow",sokf_moveable|sokf_face_player,"question_mark","0", []),
  ("tutorial_flag_red",sokf_moveable|sokf_face_player,"question_mark","0", []),
  ("tutorial_flag_blue",sokf_moveable|sokf_face_player,"question_mark","0", []),

  ("interior_prison_a",0,"interior_prison_a","bo_interior_prison_a", []),
  ("interior_prison_b",0,"question_mark","0", []),
  ("interior_prison_cell_a",0,"interior_prison_cell_a","bo_interior_prison_cell_a", []),
  ("interior_prison_d",0,"question_mark","0", []),  

  ("arena_archery_target_a",0,"arena_archery_target_a","bo_arena_archery_target_a", []),
  ("archery_butt_a",0,"archery_butt","bo_archery_butt", [
   (ti_on_scene_prop_hit,
    [(neg|game_in_multiplayer_mode),
        (store_trigger_param_1, ":instance_no"),
        (prop_instance_get_position, pos2, ":instance_no"),
        (get_player_agent_no, ":player_agent"),
        (agent_get_position, pos3, ":player_agent"),
        (get_distance_between_positions, ":player_distance", pos3, pos2),
        (position_transform_position_to_local, pos4, pos2, pos1),
        (position_set_y, pos4, 0),
        (position_set_x, pos2, 0),
        (position_set_y, pos2, 0),
        (position_set_z, pos2, 0),
        (get_distance_between_positions, ":target_distance", pos4, pos2),
        (assign, ":point_earned", 43), #Calculating a point between 0-12
        (val_sub, ":point_earned", ":target_distance"),
        (val_mul, ":point_earned", 1299),
        (val_div, ":point_earned", 4300),
        (try_begin),
          (lt, ":point_earned", 0),
          (assign, ":point_earned", 0),
        (try_end),
        (val_div, ":player_distance", 91), #Converting to yards
        (assign, reg60, ":point_earned"),
        (assign, reg61, ":player_distance"),
       # (display_message, "str_archery_target_hit"),
    ]),
  ]),
  ("archery_target_with_hit_a",0,"arena_archery_target_a","bo_arena_archery_target_a", [
   (ti_on_scene_prop_hit,
    [(neg|game_in_multiplayer_mode),
        (set_fixed_point_multiplier, 100),
        (store_trigger_param_1, ":instance_no"),
        (position_get_x, ":attacker_agent_id", pos2),
        (val_div, ":attacker_agent_id", 100),
        (get_player_agent_no, ":player_agent"),
        (try_begin),
          (eq, ":player_agent", ":attacker_agent_id"),
          (prop_instance_get_position, pos2, ":instance_no"),
          (agent_get_position, pos3, ":player_agent"),
          (get_distance_between_positions, ":player_distance", pos3, pos2),
          (position_transform_position_to_local, pos4, pos2, pos1),
          (position_set_y, pos4, 0),
          (position_set_x, pos2, 0),
          (position_set_y, pos2, 0),
          (position_set_z, pos2, 0),
          (get_distance_between_positions, ":target_distance", pos4, pos2),
          (assign, ":point_earned", 43), #Calculating a point between 0-12
          (val_sub, ":point_earned", ":target_distance"),
          (val_mul, ":point_earned", 1299),
          (val_div, ":point_earned", 4300),
          (try_begin),
            (lt, ":point_earned", 0),
            (assign, ":point_earned", 0),
          (try_end),
          (assign, "$g_last_archery_point_earned", ":point_earned"),
          (val_div, ":player_distance", 91), #Converting to yards
          (assign, reg60, ":point_earned"),
          (assign, reg61, ":player_distance"),
          (display_message, "str_archery_target_hit"),
          (eq, "$g_tutorial_training_ground_horseman_trainer_state", 6),
          (eq, "$g_tutorial_training_ground_horseman_trainer_completed_chapters", 2),
          (prop_instance_get_variation_id_2, ":var_id_2", ":instance_no"),
          (val_sub, ":var_id_2", 1),
          (eq, "$g_tutorial_training_ground_current_score", ":var_id_2"),
          (val_add, "$g_tutorial_training_ground_current_score", 1),
        (try_end),
    ]),
  ]),
  ("dummy_a",sokf_destructible|sokf_moveable,"arena_archery_target_b","bo_arena_archery_target_b",   [
   (ti_on_scene_prop_destroy,
    [
        (store_trigger_param_1, ":instance_no"),
        (prop_instance_get_starting_position, pos1, ":instance_no"),
		(assign, ":rotate_side", 80),
		(try_begin),
			(neg|game_in_multiplayer_mode),
			(get_player_agent_no, ":player_agent"),
			(agent_get_position, 2, ":player_agent"),
			(try_begin),
			  (position_is_behind_position, 2, 1),
			  (val_mul, ":rotate_side", -1),
			(try_end),
			(val_add, "$tutorial_num_total_dummies_destroyed", 1),
		(try_end),
        (position_rotate_x, 1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", 1, 70), #animate to position 1 in 0.7 second
        (play_sound, "snd_dummy_destroyed"),
    ]),
   (ti_on_scene_prop_hit,
    [
        (store_trigger_param_1, ":instance_no"),
        (store_trigger_param_2, ":damage"),
        (assign, reg60, ":damage"),
        (val_div, ":damage", 8),
        (prop_instance_get_position, pos2, ":instance_no"),
		(try_begin),
			(neg|game_in_multiplayer_mode),
			(get_player_agent_no, ":player_agent"),
		(else_try),
			(store_trigger_param,":player_agent",3),
		(try_end),
		(agent_is_active,":player_agent"),
        (agent_get_position, pos3, ":player_agent"),
        (try_begin),
          (position_is_behind_position, pos3, pos2),
          (val_mul, ":damage", -1),
        (try_end),
        (position_rotate_x, 2, ":damage"),
		(try_begin),
			(neg|game_in_multiplayer_mode),
			(display_message, "str_delivered_damage"),
        (try_end),
        (prop_instance_animate_to_position, ":instance_no", 2, 30), #animate to position 1 in 0.3 second
        (play_sound, "snd_dummy_hit"),
        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
    ]),
  ]),

  ("band_a",0,"band_a","0", []),
  ("arena_sign",0,"arena_arms","0", []),

  ("castle_h_battlement_a",0,"castle_h_battlement_a","bo_castle_h_battlement_a", []),
  ("castle_h_battlement_b",0,"castle_h_battlement_b","bo_castle_h_battlement_b", []),
  ("castle_h_battlement_c",0,"question_mark","0", []),
  ("castle_h_battlement_a2",0,"castle_h_battlement_a2","bo_castle_h_battlement_a2", []),
  ("castle_h_battlement_b2",0,"castle_h_battlement_b2","bo_castle_h_battlement_b2", []),
  ("castle_h_corner_a",0,"castle_h_corner_a","bo_castle_h_corner_a", []),
  ("castle_h_corner_c",0,"question_mark","0", []),
  ("castle_h_stairs_a",sokf_type_ladder,"castle_h_stairs_a","bo_castle_h_stairs_a", []),
  ("castle_h_stairs_b",0,"castle_h_stairs_b","bo_castle_h_stairs_b", []),
  ("castle_h_gatehouse_a",0,"question_mark","0", []),
  ("castle_h_keep_a",0,"question_mark","0", []),
  ("castle_h_keep_b",0,"question_mark","0", []),
  ("castle_h_house_a",0,"question_mark","0", []),
  ("castle_h_house_b",0,"question_mark","0", []),
  ("castle_h_house_c",0,"question_mark","0", []),
  ("castle_h_battlement_barrier",0,"castle_h_battlement_barrier","bo_castle_h_battlement_barrier", []),




  ("full_keep_b",0,"question_mark","0", []),

  ("castle_f_keep_a",0,"question_mark","0", []),
  ("castle_f_battlement_a",0,"castle_f_battlement_a","bo_castle_f_battlement_a", []),
  ("castle_f_battlement_a_destroyed",0,"castle_f_battlement_a_destroyed","bo_castle_f_battlement_a_destroyed", []),
  ("castle_f_battlement_b",0,"castle_f_battlement_b","bo_castle_f_battlement_b", []),
  ("castle_f_battlement_c",0,"question_mark","0", []),
  ("castle_f_battlement_d",0,"castle_f_battlement_d","bo_castle_f_battlement_d", []),
  ("castle_f_battlement_e",0,"castle_f_battlement_e","bo_castle_f_battlement_e", []),
  ("castle_f_sally_port_elevation",0,"castle_f_sally_port_elevation","bo_castle_f_sally_port_elevation", []),
  ("castle_f_battlement_corner_a",0,"castle_f_battlement_corner_a","bo_castle_f_battlement_corner_a", []),
  ("castle_f_battlement_corner_b",0,"castle_f_battlement_corner_b","bo_castle_f_battlement_corner_b", []),
  ("castle_f_battlement_corner_c",0,"castle_f_battlement_corner_c","bo_castle_f_battlement_corner_c", []),
  
  ("castle_f_door_a",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"question_mark","0", []),

  ("castle_f_doors_top_a",0,"castle_f_doors_top_a","bo_castle_f_doors_top_a", []),
    
  ("castle_f_sally_door_a",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"castle_f_sally_door_a","bo_castle_f_sally_door_a", [
    check_sally_door_use_trigger,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 1000),
    ]),
     
   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),      
    ]),
  ]),

  ("castle_f_stairs_a",sokf_type_ladder,"castle_f_stairs_a","bo_castle_f_stairs_a", []),
  ("castle_f_tower_a",0,"question_mark","0", []),
  ("castle_f_wall_stairs_a",sokf_type_ladder,"castle_f_wall_stairs_a","bo_castle_f_wall_stairs_a", []),
  ("castle_f_wall_stairs_b",sokf_type_ladder,"castle_f_wall_stairs_b","bo_castle_f_wall_stairs_b", []),
  ("castle_f_wall_way_a",0,"castle_f_wall_way_a","bo_castle_f_wall_way_a", []),
  ("castle_f_wall_way_b",0,"castle_f_wall_way_b","bo_castle_f_wall_way_b", []),
  ("castle_f_gatehouse_a",0,"question_mark","0", []),

  ("castle_g_battlement_a",0,"question_mark","0", []),
  ("castle_g_battlement_a1",0,"question_mark","0", []),
  ("castle_g_battlement_c",0,"question_mark","0", []),
  ("castle_g_corner_a",0,"question_mark","0", []),
  ("castle_g_corner_c",0,"question_mark","0", []),  
  ("castle_g_tower_a",sokf_type_ladder,"question_mark","0", []),
  ("castle_g_gate_house",0,"question_mark","0", []),
  ("castle_g_gate_house_door_a",0,"castle_g_gate_house_door_a","bo_castle_g_gate_house_door_a", []),
  ("castle_g_gate_house_door_b",0,"castle_g_gate_house_door_b","bo_castle_g_gate_house_door_b", []),
  ("castle_g_square_keep_a",0,"question_mark","0", []),

  ("castle_i_battlement_a",0,"question_mark","0", []),
  ("castle_i_battlement_a1",0,"question_mark","0", []),
  ("castle_i_battlement_c",0,"question_mark","0", []),
  ("castle_i_corner_a",0,"question_mark","0", []),
  ("castle_i_corner_c",0,"question_mark","0", []),  
  ("castle_i_tower_a",sokf_type_ladder,"question_mark","0", []),
  ("castle_i_gate_house",0,"question_mark","0", []),
  ("castle_i_gate_house_door_a",0,"castle_i_gate_house_door_a","bo_castle_i_gate_house_door_a", []),
  ("castle_i_gate_house_door_b",0,"castle_i_gate_house_door_b","bo_castle_i_gate_house_door_b", []),
  ("castle_i_square_keep_a",0,"question_mark","0", []),





  ("mosque_a",0,"question_mark","0", []),
  ("stone_minaret_a",0,"question_mark","0", []),
  ("stone_house_a",0,"question_mark","0", []),
  ("stone_house_b",0,"question_mark","0", []),
  ("stone_house_c",0,"question_mark","0", []),
  ("stone_house_d",0,"question_mark","0", []),
  ("stone_house_e",0,"question_mark","0", []),
  ("stone_house_f",0,"question_mark","0", []),

  ("banner_pole", sokf_moveable, "banner_pole", "bo_banner_pole", []),

  # ("custom_banner_01",0,"custom_banner_01","0",
   # [
     # (ti_on_init_scene_prop,
      # [
        # (party_get_slot, ":leader_troop", "$g_encountered_party", slot_town_lord),
        # (try_begin),
          # (ge, ":leader_troop", 0),
          # (cur_scene_prop_set_tableau_material, "tableau_custom_banner_default", ":leader_troop"),
        # (try_end),
        # ]),
     # ]),
  # ("custom_banner_02",0,"custom_banner_02","0",
   # [
     # (ti_on_init_scene_prop,
      # [
        # (party_get_slot, ":leader_troop", "$g_encountered_party", slot_town_lord),
        # (try_begin),
          # (ge, ":leader_troop", 0),
          # (cur_scene_prop_set_tableau_material, "tableau_custom_banner_default", ":leader_troop"),
        # (try_end),
        # ]),
     # ]),

  #banners
  ("banner_extra01", 0, "banner_extra01", "0", []),
  ("banner_extra02", 0, "banner_extra02", "0", []),
  ("banner_extra03", 0, "banner_extra03", "0", []),
  ("banner_extra04", 0, "banner_extra04", "0", []),
  ("banner_extra05", 0, "banner_extra05", "0", []),
  ("banner_extra06", 0, "banner_extra06", "0", []),
  ("banner_extra07", 0, "banner_extra07", "0", []),
  ("banner_extra08", 0, "banner_extra08", "0", []),
  ("banner_extra09", 0, "banner_extra09", "0", []),
  ("banner_extra10", 0, "banner_extra10", "0", []),
  ("banner_extra11", 0, "banner_extra11", "0", []),
  ("banner_extra12", 0, "banner_extra12", "0", []),
  ("banner_extra13", 0, "banner_extra13", "0", []),
  ("banner_extra14", 0, "banner_extra14", "0", []),
  ("banner_extra15", 0, "banner_extra15", "0", []),
  ("banner_extra16", 0, "banner_extra16", "0", []),
  ("banner_extra17", 0, "banner_extra17", "0", []),
  ("banner_extra18", 0, "banner_extra18", "0", []),
  ("banner_extra19", 0, "banner_extra19", "0", []),
  ("banner_extra20", 0, "banner_extra20", "0", []),
  ("banner_extra21", 0, "banner_extra21", "0", []),
  ("banner_extra201", 0, "banner_extra201", "0", []),
  ("banner_extra202", 0, "banner_extra202", "0", []),
  ("banner_extra203", 0, "banner_extra203", "0", []),
  ("banner_extra204", 0, "banner_extra204", "0", []),
  ("banner_extra205", 0, "banner_extra205", "0", []),
  ("banner_extra206", 0, "banner_extra206", "0", []),
  # ("banner_extra207", 0, "banner_extra207", "0", []), reserve for default
  ("banner_extra208", 0, "banner_extra208", "0", []),
  ("banner_extra209", 0, "banner_extra209", "0", []),
  ("banner_extra210", 0, "banner_extra210", "0", []),
  ("banner_extra211", 0, "banner_extra211", "0", []),
  # ("banner_extra212", 0, "banner_extra212", "0", []),
  # ("banner_extra213", 0, "banner_extra213", "0", []),
  # ("banner_extra214", 0, "banner_extra214", "0", []),
  # ("banner_extra215", 0, "banner_extra215", "0", []),
  # ("banner_extra216", 0, "banner_extra216", "0", []),
  # ("banner_extra217", 0, "banner_extra217", "0", []),
  # ("banner_extra218", 0, "banner_extra218", "0", []),
  # ("banner_extra219", 0, "banner_extra219", "0", []),
  # ("banner_extra220", 0, "banner_extra220", "0", []),
  # ("banner_extra221", 0, "banner_extra221", "0", []),
  ("banner_anglosaxon01", 0, "banner_anglosaxon01", "0", []),
  ("banner_anglosaxon02", 0, "banner_anglosaxon02", "0", []),
  ("banner_anglosaxon03", 0, "banner_anglosaxon03", "0", []),
  ("banner_anglosaxon04", 0, "banner_anglosaxon04", "0", []),
  ("banner_anglosaxon05", 0, "banner_anglosaxon05", "0", []),
  ("banner_anglosaxon06", 0, "banner_anglosaxon06", "0", []),
  ("banner_anglosaxon07", 0, "banner_anglosaxon07", "0", []),
  ("banner_anglosaxon08", 0, "banner_anglosaxon08", "0", []),
  ("banner_anglosaxon09", 0, "banner_anglosaxon09", "0", []),
  ("banner_anglosaxon10", 0, "banner_anglosaxon10", "0", []),
  ("banner_anglosaxon11", 0, "banner_anglosaxon11", "0", []),
  ("banner_anglosaxon12", 0, "banner_anglosaxon12", "0", []),
  ("banner_anglosaxon13", 0, "banner_anglosaxon13", "0", []),
  ("banner_anglosaxon14", 0, "banner_anglosaxon14", "0", []),
  ("banner_anglosaxon15", 0, "banner_anglosaxon15", "0", []),
  ("banner_anglosaxon16", 0, "banner_anglosaxon16", "0", []),
  ("banner_anglosaxon17", 0, "banner_anglosaxon17", "0", []),
  ("banner_anglosaxon18", 0, "banner_anglosaxon18", "0", []),
  ("banner_anglosaxon19", 0, "banner_anglosaxon19", "0", []),
  ("banner_anglosaxon20", 0, "banner_anglosaxon20", "0", []),
  ("banner_anglosaxon21", 0, "banner_anglosaxon21", "0", []),
  ("banner_anglosaxon201", 0, "banner_anglosaxon201", "0", []),
  ("banner_anglosaxon202", 0, "banner_anglosaxon202", "0", []),
  ("banner_anglosaxon203", 0, "banner_anglosaxon203", "0", []),
  ("banner_anglosaxon204", 0, "banner_anglosaxon204", "0", []),
  # ("banner_anglosaxon205", 0, "banner_anglosaxon205", "0", []),
  # ("banner_anglosaxon206", 0, "banner_anglosaxon206", "0", []),
  # ("banner_anglosaxon207", 0, "banner_anglosaxon207", "0", []),
  # ("banner_anglosaxon208", 0, "banner_anglosaxon208", "0", []),
  # ("banner_anglosaxon209", 0, "banner_anglosaxon209", "0", []),
  # ("banner_anglosaxon210", 0, "banner_anglosaxon210", "0", []),
  # ("banner_anglosaxon211", 0, "banner_anglosaxon211", "0", []),
  # ("banner_anglosaxon212", 0, "banner_anglosaxon212", "0", []),
  # ("banner_anglosaxon213", 0, "banner_anglosaxon213", "0", []),
  # ("banner_anglosaxon214", 0, "banner_anglosaxon214", "0", []),
  # ("banner_anglosaxon215", 0, "banner_anglosaxon215", "0", []),
  # ("banner_anglosaxon216", 0, "banner_anglosaxon216", "0", []),
  # ("banner_anglosaxon217", 0, "banner_anglosaxon217", "0", []),
  # ("banner_anglosaxon218", 0, "banner_anglosaxon218", "0", []),
  # ("banner_anglosaxon219", 0, "banner_anglosaxon219", "0", []),
  # ("banner_anglosaxon220", 0, "banner_anglosaxon220", "0", []),
  # ("banner_anglosaxon221", 0, "banner_anglosaxon221", "0", []),
  ("banner_briton01", 0, "banner_briton01", "0", []),
  ("banner_briton02", 0, "banner_briton02", "0", []),
  ("banner_briton03", 0, "banner_briton03", "0", []),
  ("banner_briton04", 0, "banner_briton04", "0", []),
  ("banner_briton05", 0, "banner_briton05", "0", []),
  ("banner_briton06", 0, "banner_briton06", "0", []),
  ("banner_briton07", 0, "banner_briton07", "0", []),
  ("banner_briton08", 0, "banner_briton08", "0", []),
  ("banner_briton09", 0, "banner_briton09", "0", []),
  ("banner_briton10", 0, "banner_briton10", "0", []),
  ("banner_briton11", 0, "banner_briton11", "0", []),
  ("banner_briton12", 0, "banner_briton12", "0", []),
  ("banner_briton13", 0, "banner_briton13", "0", []),
  ("banner_briton14", 0, "banner_briton14", "0", []),
  ("banner_briton15", 0, "banner_briton15", "0", []),
  ("banner_briton16", 0, "banner_briton16", "0", []),
  ("banner_briton17", 0, "banner_briton17", "0", []),
  ("banner_briton18", 0, "banner_briton18", "0", []),
  ("banner_briton19", 0, "banner_briton19", "0", []),
  ("banner_briton20", 0, "banner_briton20", "0", []),
  ("banner_briton21", 0, "banner_briton21", "0", []),
  ("banner_briton201", 0, "banner_briton201", "0", []),
  ("banner_briton202", 0, "banner_briton202", "0", []),
  ("banner_briton203", 0, "banner_briton203", "0", []),
  ("banner_briton204", 0, "banner_briton204", "0", []),
  ("banner_briton205", 0, "banner_briton205", "0", []),
  ("banner_briton206", 0, "banner_briton206", "0", []),
  ("banner_briton207", 0, "banner_briton207", "0", []),
  ("banner_briton208", 0, "banner_briton208", "0", []),
  ("banner_briton209", 0, "banner_briton209", "0", []),
  ("banner_briton210", 0, "banner_briton210", "0", []),
  ("banner_briton211", 0, "banner_briton211", "0", []),
  ("banner_briton212", 0, "banner_briton212", "0", []),
  ("banner_briton213", 0, "banner_briton213", "0", []),
  ("banner_briton214", 0, "banner_briton214", "0", []),
  ("banner_briton215", 0, "banner_briton215", "0", []),
  ("banner_briton216", 0, "banner_briton216", "0", []),
  ("banner_briton217", 0, "banner_briton217", "0", []),
  ("banner_briton218", 0, "banner_briton218", "0", []),
  ("banner_briton219", 0, "banner_briton219", "0", []),
  ("banner_briton220", 0, "banner_briton220", "0", []),
  ("banner_briton221", 0, "banner_briton221", "0", []),
  ("banner_irish01", 0, "banner_irish01", "0", []),
  ("banner_irish02", 0, "banner_irish02", "0", []),
  ("banner_irish03", 0, "banner_irish03", "0", []),
  ("banner_irish04", 0, "banner_irish04", "0", []),
  ("banner_irish05", 0, "banner_irish05", "0", []),
  ("banner_irish06", 0, "banner_irish06", "0", []),
  ("banner_irish07", 0, "banner_irish07", "0", []),
  ("banner_irish08", 0, "banner_irish08", "0", []),
  ("banner_irish09", 0, "banner_irish09", "0", []),
  ("banner_irish10", 0, "banner_irish10", "0", []),
  ("banner_irish11", 0, "banner_irish11", "0", []),
  ("banner_irish12", 0, "banner_irish12", "0", []),
  ("banner_irish13", 0, "banner_irish13", "0", []),
  ("banner_irish14", 0, "banner_irish14", "0", []),
  ("banner_irish15", 0, "banner_irish15", "0", []),
  ("banner_irish16", 0, "banner_irish16", "0", []),
  ("banner_irish17", 0, "banner_irish17", "0", []),
  ("banner_irish18", 0, "banner_irish18", "0", []),
  ("banner_irish19", 0, "banner_irish19", "0", []),
  ("banner_irish20", 0, "banner_irish20", "0", []),
  ("banner_irish21", 0, "banner_irish21", "0", []),
  ("banner_irish201", 0, "banner_irish201", "0", []),
  ("banner_irish202", 0, "banner_irish202", "0", []),
  ("banner_irish203", 0, "banner_irish203", "0", []),
  ("banner_irish204", 0, "banner_irish204", "0", []),
  ("banner_irish205", 0, "banner_irish205", "0", []),
  ("banner_irish206", 0, "banner_irish206", "0", []),
  ("banner_irish207", 0, "banner_irish207", "0", []),
  ("banner_irish208", 0, "banner_irish208", "0", []),
  ("banner_irish209", 0, "banner_irish209", "0", []),
  ("banner_irish210", 0, "banner_irish210", "0", []),
  ("banner_irish211", 0, "banner_irish211", "0", []),
  ("banner_irish212", 0, "banner_irish212", "0", []),
  ("banner_irish213", 0, "banner_irish213", "0", []),
  # ("banner_irish214", 0, "banner_irish214", "0", []),
  # ("banner_irish215", 0, "banner_irish215", "0", []),
  # ("banner_irish216", 0, "banner_irish216", "0", []),
  # ("banner_irish217", 0, "banner_irish217", "0", []),
  # ("banner_irish218", 0, "banner_irish218", "0", []),
  # ("banner_irish219", 0, "banner_irish219", "0", []),
  # ("banner_irish220", 0, "banner_irish220", "0", []),
  # ("banner_irish221", 0, "banner_irish221", "0", []),
  ("banner_pict01", 0, "banner_pict01", "0", []),
  ("banner_pict02", 0, "banner_pict02", "0", []),
  ("banner_pict03", 0, "banner_pict03", "0", []),
  ("banner_pict04", 0, "banner_pict04", "0", []),
  ("banner_pict05", 0, "banner_pict05", "0", []),
  ("banner_pict06", 0, "banner_pict06", "0", []),
  ("banner_pict07", 0, "banner_pict07", "0", []),
  ("banner_pict08", 0, "banner_pict08", "0", []),
  # ("banner_pict09", 0, "banner_pict09", "0", []),
  # ("banner_pict10", 0, "banner_pict10", "0", []),
  # ("banner_pict11", 0, "banner_pict11", "0", []),
  # ("banner_pict12", 0, "banner_pict12", "0", []),
  # ("banner_pict13", 0, "banner_pict13", "0", []),
  # ("banner_pict14", 0, "banner_pict14", "0", []),
  # ("banner_pict15", 0, "banner_pict15", "0", []),
  # ("banner_pict16", 0, "banner_pict16", "0", []),
  # ("banner_pict17", 0, "banner_pict17", "0", []),
  # ("banner_pict18", 0, "banner_pict18", "0", []),
  # ("banner_pict19", 0, "banner_pict19", "0", []),
  # ("banner_pict20", 0, "banner_pict20", "0", []),
  # ("banner_pict21", 0, "banner_pict21", "0", []),
  ("banner_viking01", 0, "banner_viking01", "0", []),
  ("banner_viking02", 0, "banner_viking02", "0", []),
  ("banner_viking03", 0, "banner_viking03", "0", []),
  ("banner_viking04", 0, "banner_viking04", "0", []),
  ("banner_viking05", 0, "banner_viking05", "0", []),
  ("banner_viking06", 0, "banner_viking06", "0", []),
  ("banner_viking07", 0, "banner_viking07", "0", []),
  ("banner_viking08", 0, "banner_viking08", "0", []),
  ("banner_viking09", 0, "banner_viking09", "0", []),
  ("banner_viking10", 0, "banner_viking10", "0", []),
  ("banner_viking11", 0, "banner_viking11", "0", []),
  ("banner_viking12", 0, "banner_viking12", "0", []),
  ("banner_viking13", 0, "banner_viking13", "0", []),
  ("banner_viking14", 0, "banner_viking14", "0", []),
  ("banner_viking15", 0, "banner_viking15", "0", []),
  ("banner_viking16", 0, "banner_viking16", "0", []),
  ("banner_viking17", 0, "banner_viking17", "0", []),
  ("banner_viking18", 0, "banner_viking18", "0", []),
  ("banner_viking19", 0, "banner_viking19", "0", []),
  ("banner_viking20", 0, "banner_viking20", "0", []),
  ("banner_viking21", 0, "banner_viking21", "0", []),
  ("banner_viking201", 0, "banner_viking201", "0", []),
  ("banner_viking202", 0, "banner_viking202", "0", []),
  ("banner_viking203", 0, "banner_viking203", "0", []),
  ("banner_viking204", 0, "banner_viking204", "0", []),
  ("banner_viking205", 0, "banner_viking205", "0", []),
  ("banner_viking206", 0, "banner_viking206", "0", []),
  ("banner_viking207", 0, "banner_viking207", "0", []),
  ("banner_viking208", 0, "banner_viking208", "0", []),
  ("banner_viking209", 0, "banner_viking209", "0", []),
  ("banner_viking210", 0, "banner_viking210", "0", []),
  ("banner_viking211", 0, "banner_viking211", "0", []),
  ("banner_viking212", 0, "banner_viking212", "0", []),
  ("banner_viking213", 0, "banner_viking213", "0", []),
  ("banner_viking214", 0, "banner_viking214", "0", []),
  ("banner_viking215", 0, "banner_viking215", "0", []),
  ("banner_viking216", 0, "banner_viking216", "0", []),
  # ("banner_viking217", 0, "banner_viking217", "0", []),
  # ("banner_viking218", 0, "banner_viking218", "0", []),
  # ("banner_viking219", 0, "banner_viking219", "0", []),
  # ("banner_viking220", 0, "banner_viking220", "0", []),
  # ("banner_viking221", 0, "banner_viking221", "0", []),
  ("banner_kingdom_a", 0, "banner_kingdom_a", "0", []),
  ("banner_kingdom_b", 0, "banner_kingdom_b", "0", []),
  ("banner_kingdom_c", 0, "banner_kingdom_c", "0", []),
  ("banner_kingdom_d", 0, "banner_kingdom_d", "0", []),
  ("banner_kingdom_e", 0, "banner_kingdom_e", "0", []),
  ("banner_kingdom_f", 0, "banner_kingdom_f", "0", []),
  ("banner_kingdom_g", 0, "banner_kingdom_g", "0", []),
  ("banner_kingdom_h", 0, "banner_kingdom_h", "0", []),
  ("banner_kingdom_i", 0, "banner_kingdom_i", "0", []),
  ("banner_kingdom_j", 0, "banner_kingdom_j", "0", []),
  ("banner_kingdom_k", 0, "banner_kingdom_k", "0", []),
  ("banner_kingdom_l", 0, "banner_kingdom_l", "0", []),
  ("banner_kingdom_ll", 0, "banner_kingdom_ll", "0", []),
  ("banner_kingdom_m", 0, "banner_kingdom_m", "0", []),
  ("banner_kingdom_n", 0, "banner_kingdom_n", "0", []),
  ("banner_kingdom_o", 0, "banner_kingdom_o", "0", []),
  ("banner_kingdom_p", 0, "banner_kingdom_p", "0", []),
  ("banner_kingdom_q", 0, "banner_kingdom_q", "0", []),
  ("banner_kingdom_r", 0, "banner_kingdom_r", "0", []),
  ("banner_kingdom_s", 0, "banner_kingdom_s", "0", []),
  ("banner_kingdom_t", 0, "banner_kingdom_t", "0", []),
  ("banner_default", 0, "banner_extra207", "0", []),
  
  ("tavern_chair_a",0,"tavern_chair_a","bo_tavern_chair_a", []),
  ("tavern_chair_b",0,"tavern_chair_b","bo_tavern_chair_b", []),
  ("tavern_table_a",0,"tavern_table_a","bo_tavern_table_a", []),
  ("tavern_table_b",0,"tavern_table_b","bo_tavern_table_b", []),
  ("fireplace_a",0,"fireplace_a","bo_fireplace_a", []),
  ("barrel",0,"barrel","bobarrel", []),
  ("bench_tavern",0,"bench_tavern","bobench_tavern", []),
  ("bench_tavern_b",0,"bench_tavern_b","bo_bench_tavern_b", []),
  ("bowl_wood",0,"bowl_wood","0", []),
  ("chandelier_table",0,"question_mark","0", []),
  ("chandelier_tavern",0,"question_mark","0", []),
  ("chest_gothic",0,"chest_gothic","bochest_gothic", []),
  ("chest_b",0,"chest_b","bo_chest_b", []),
  ("chest_c",0,"chest_c","bo_chest_c", []),
  ("counter_tavern",0,"counter_tavern","bocounter_tavern", []),
  ("cup",0,"cup","0", []),
  ("dish_metal",0,"dish_metal","0", []),
  ("gothic_chair",0,"gothic_chair","bogothic_chair", []),
  ("gothic_stool",0,"gothic_stool","bogothic_stool", []),
  ("grate",0,"question_mark","0", []),
  ("jug",0,"jug","0", []),
  ("potlamp",0,"question_mark","0", []),
  ("weapon_rack",0,"weapon_rack","boweapon_rack", []),
  ("weapon_rack_big",0,"weapon_rack_big","boweapon_rack_big", []),
  ("tavern_barrel",0,"barrel","bobarrel", []),
  ("tavern_barrel_b",0,"tavern_barrel_b","bo_tavern_barrel_b", []),
  ("merchant_sign",0,"merchant_sign","bo_tavern_sign", []),
  ("tavern_sign",0,"tavern_sign","bo_tavern_sign", []),
  ("sack",0,"sack","0", []),
  ("skull_a",0,"skull_a","0", []),
  ("skull_b",0,"skull_b","0", []),
  ("skull_c",0,"skull_c","0", []),
  ("skull_d",0,"skull_d","0", []),
  ("skeleton_cow",0,"skeleton_cow","0", []),
  ("cupboard_a",0,"cupboard_a","bo_cupboard_a", []),
  ("box_a",0,"box_a","bo_box_a", []),
  ("bucket_a",0,"bucket_a","bo_bucket_a", []),
  ("straw_a",0,"straw_a","0", []),
  ("straw_b",0,"straw_b","0", []),
  ("straw_c",0,"straw_c","0", []),
  ("cloth_a",0,"cloth_a","0", []),
  ("cloth_b",0,"cloth_b","0", []),
  ("mat_a",0,"mat_a","0", []),
  ("mat_b",0,"mat_b","0", []),
  ("mat_c",0,"mat_c","0", []),
  ("mat_d",0,"mat_d","0", []),

  ("wood_a",0,"wood_a","bo_wood_a", []),
  ("wood_b",0,"wood_b","bo_wood_b", []),
  ("wood_heap",0,"wood_heap_a","bo_wood_heap_a", []),
  ("wood_heap_b",0,"wood_heap_b","bo_wood_heap_b", []),
  ("water_well_a",0,"water_well_a","bo_water_well_a", []),
  ("net_a",0,"net_a","bo_net_a", []),
  ("net_b",0,"net_b","0", []),

  ("meat_hook",0,"meat_hook","0", []),
  ("cooking_pole",0,"cooking_pole","0", []),
  ("bowl_a",0,"bowl_a","0", []),
  ("bucket_b",0,"bucket_b","0", []),
  ("washtub_a",0,"washtub_a","bo_washtub_a", []),
  ("washtub_b",0,"washtub_b","bo_washtub_b", []),

  ("table_trunk_a",0,"table_trunk_a","bo_table_trunk_a", []),
  ("chair_trunk_a",0,"chair_trunk_a","bo_chair_trunk_a", []),
  ("chair_trunk_b",0,"chair_trunk_b","bo_chair_trunk_b", []),
  ("chair_trunk_c",0,"chair_trunk_c","bo_chair_trunk_c", []),

  ("table_trestle_long",0,"table_trestle_long","bo_table_trestle_long", []),
  ("table_trestle_small",0,"table_trestle_small","bo_table_trestle_small", []),
  ("chair_trestle",0,"chair_trestle","bo_chair_trestle", []),

  ("wheel",0,"wheel","bo_wheel", []),
  ("ladder",sokf_type_ladder,"ladder","boladder", []),
  ("cart",0,"cart","bo_cart", []),
  ("village_stand",0,"village_stand","bovillage_stand", []),
  ("wooden_stand",0,"wooden_stand","bowooden_stand", []),
  ("table_small",0,"table_small","bo_table_small", []),
  ("table_small_b",0,"table_small_b","bo_table_small_b", []),
  ("small_timber_frame_house_a",0,"question_mark","0", []),
  ("timber_frame_house_b",0,"question_mark","0", []),
  ("timber_frame_house_c",0,"question_mark","0", []),
  ("timber_frame_extension_a",0,"question_mark","0", []),
  ("timber_frame_extension_b",0,"question_mark","0", []),
  ("stone_stairs_a",sokf_type_ladder,"stone_stairs_a","bo_stone_stairs_a", []),
  ("stone_stairs_b",sokf_type_ladder,"stone_stairs_b","bo_stone_stairs_b", []),
  ("railing_a",0,"railing_a","bo_railing_a", []),
  ("side_building_a",0,"side_building_a","bo_side_building_a", []),
  ("battlement_a",0,"battlement_a","bo_battlement_a", []),

  ("battlement_a_destroyed",0,"battlement_a_destroyed","bo_battlement_a_destroyed", []),


  ("round_tower_a",0,"round_tower_a","bo_round_tower_a", []),
  ("small_round_tower_a",0,"question_mark","0", []),
  ("small_round_tower_roof_a",0,"question_mark","0", []),
  ("square_keep_a",0,"question_mark","0", []),
  ("square_tower_roof_a",0,"question_mark","0", []),
  ("gate_house_a",0,"gate_house_a","bo_gate_house_a", []),
  ("gate_house_b",0,"question_mark","0", []),
  ("small_wall_a",0,"small_wall_a","bo_small_wall_a", []),
  ("small_wall_b",0,"small_wall_b","bo_small_wall_b", []),
  ("small_wall_c",0,"small_wall_c","bo_small_wall_c", []),
  ("small_wall_c_destroy",0,"small_wall_c_destroy","bo_small_wall_c_destroy", []),
  ("small_wall_d",0,"small_wall_d","bo_small_wall_d", []),
  ("small_wall_e",0,"small_wall_e","bo_small_wall_d", []),
  ("small_wall_f",0,"small_wall_f","bo_small_wall_f", []),
  ("small_wall_f2",0,"small_wall_f2","bo_small_wall_f2", []),


  ("town_house_a",0,"question_mark","0", []),
  ("town_house_b",0,"question_mark","0", []),
  ("town_house_c",0,"question_mark","0", []),
  ("town_house_d",0,"question_mark","0", []),
  ("town_house_e",0,"question_mark","0", []),
  ("town_house_f",0,"question_mark","0", []),
  ("town_house_g",0,"question_mark","0", []),
  ("town_house_h",0,"question_mark","0", []),
  ("town_house_i",0,"question_mark","0", []),
  ("town_house_j",0,"question_mark","0", []),
  ("town_house_l",0,"question_mark","0", []),

  ("town_house_m",0,"question_mark","0", []),
  ("town_house_n",0,"question_mark","0", []),
  ("town_house_o",0,"question_mark","0", []),
  ("town_house_p",0,"question_mark","0", []),
  ("town_house_q",0,"question_mark","0", []),
  
  ("passage_house_a",0,"passage_house_a","bo_passage_house_a", []),
  ("passage_house_b",0,"question_mark","0", []),
  ("passage_house_c",0,"passage_house_c","bo_passage_house_c", []),
  ("passage_house_d",0,"question_mark","0", []),
  ("passage_house_c_door",0,"passage_house_c_door","bo_passage_house_c_door", []),

  ("house_extension_a",0,"question_mark","0", []),
  ("house_extension_b",0,"house_extension_b","bo_house_extension_b", []),
  ("house_extension_c",0,"house_extension_c","bo_house_extension_a", []),#reuse 
  ("house_extension_d",0,"question_mark","0", []),

  ("house_extension_e",0,"house_extension_e","bo_house_extension_e", []),
  ("house_extension_f",0,"question_mark","0", []),
  ("house_extension_f2",0,"question_mark","0", []),
  ("house_extension_g",0,"question_mark","0", []),
  ("house_extension_g2",0,"question_mark","0", []),
  ("house_extension_h",0,"question_mark","0", []),
  ("house_extension_i",0,"question_mark","0", []),

  ("house_roof_door",0,"house_roof_door","bo_house_roof_door", []),


  ("door_extension_a",0,"door_extension_a","bo_door_extension_a", []),
  ("stairs_arch_a",sokf_type_ladder,"stairs_arch_a","bo_stairs_arch_a", []),

  ("town_house_r",0,"question_mark","0", []),
  ("town_house_s",0,"question_mark","0", []),
  ("town_house_t",0,"question_mark","0", []),
  ("town_house_u",0,"question_mark","0", []),
  ("town_house_v",0,"town_house_v","bo_town_house_v", []),
  ("town_house_w",0,"town_house_w","bo_town_house_w", []),

  ("town_house_y",0,"question_mark","0", []),
  ("town_house_z",0,"question_mark","0", []),
  ("town_house_za",0,"question_mark","0", []),
  
  ("windmill",0,"question_mark","0", []),
  ("windmill_fan_turning",0,"question_mark","0", []),
  ("windmill_fan",0,"question_mark","0", []),
  ("fake_house_a",0,"question_mark","0", []),
  ("fake_house_b",0,"question_mark","0", []),
  ("fake_house_c",0,"question_mark","0", []),
  ("fake_house_d",0,"question_mark","0", []),
  ("fake_house_e",0,"question_mark","0", []),
  ("fake_house_f",0,"question_mark","0", []),

  ("fake_house_snowy_a",0,"question_mark","0", []),
  ("fake_house_snowy_b",0,"question_mark","0", []),
  ("fake_house_snowy_c",0,"question_mark","0", []),
  ("fake_house_snowy_d",0,"question_mark","0", []),


  ("fake_house_far_a",0,"question_mark","0", []),
  ("fake_house_far_b",0,"question_mark","0", []),
  ("fake_house_far_c",0,"question_mark","0", []),
  ("fake_house_far_d",0,"question_mark","0", []),
  ("fake_house_far_e",0,"question_mark","0", []),
  ("fake_house_far_f",0,"question_mark","0", []),

  ("fake_house_far_snowycrude_a",0,"question_mark","0", []),
  ("fake_house_far_snowy_b",0,"question_mark","0", []),
  ("fake_house_far_snowy_c",0,"question_mark","0", []),
  ("fake_house_far_snowy_d",0,"question_mark","0", []),

  ("earth_wall_a",0,"earth_wall_a","bo_earth_wall_a", []),
  ("earth_wall_a2",0,"earth_wall_a2","bo_earth_wall_a2", []),
  ("earth_wall_b",0,"earth_wall_b","bo_earth_wall_b", []),
  ("earth_wall_b2",0,"earth_wall_b2","bo_earth_wall_b2", []),
  ("earth_stairs_a",sokf_type_ladder,"earth_stairs_a","bo_earth_stairs_a", []),
  ("earth_stairs_b",sokf_type_ladder,"earth_stairs_b","bo_earth_stairs_b", []),
  ("earth_tower_small_a",0,"earth_tower_small_a","bo_earth_tower_small_a", []),
  ("earth_gate_house_a",0,"earth_gate_house_a","bo_earth_gate_house_a", []),
  ("earth_gate_a",0,"earth_gate_a","bo_earth_gate_a", []),
  ("earth_square_keep_a",0,"earth_square_keep_a","bo_earth_square_keep_a", []),
  ("earth_house_a",0,"earth_house_a","bo_earth_house_a", []),
  ("earth_house_b",0,"earth_house_b","bo_earth_house_b", []),
  ("earth_house_c",0,"earth_house_c","bo_earth_house_c", []),
  ("earth_house_d",0,"earth_house_d","bo_earth_house_d", []),

  ("village_steppe_a",0,"village_steppe_a","bo_village_steppe_a", []),
  ("village_steppe_b",0,"question_mark","0", []),
  ("village_steppe_c",0,"question_mark","0", []),
  ("village_steppe_d",0,"question_mark","0", []),
  ("village_steppe_e",0,"question_mark","0", []),
  ("village_steppe_f",0,"question_mark","0", []),
  ("town_house_aa",0,"question_mark","0", []),
  
  
  ("snowy_house_a",0,"question_mark","0", []),
  ("snowy_house_b",0,"question_mark","0", []),
  ("snowy_house_c",0,"question_mark","0", []),
  ("snowy_house_d",0,"question_mark","0", []),
  ("snowy_house_e",0,"question_mark","0", []),
  ("snowy_house_f",0,"question_mark","0", []),
  ("snowy_house_g",0,"question_mark","0", []),
  ("snowy_house_h",0,"question_mark","0", []),
  ("snowy_house_i",0,"question_mark","0", []),
  ("snowy_wall_a",0,"snowy_wall_a","bo_snowy_wall_a", []),

  ("snowy_stand",0,"snowy_stand","bo_snowy_stand", []),

  ("snowy_heap_a",0,"snowy_heap_a","bo_snowy_heap_a", []),
  ("snowy_trunks_a",0,"snowy_trunks_a","bo_snowy_trunks_a", []),

  ("snowy_castle_tower_a",0,"question_mark","0", []),
  ("snowy_castle_battlement_a",0,"question_mark","0", []),
  ("snowy_castle_battlement_a_destroyed",0,"question_mark","0", []),
 
  ("snowy_castle_battlement_b",0,"question_mark","0", []),
  ("snowy_castle_battlement_corner_a",0,"question_mark","0", []),
  ("snowy_castle_battlement_corner_b",0,"question_mark","0", []),
  ("snowy_castle_battlement_corner_c",0,"question_mark","0", []),
  ("snowy_castle_battlement_stairs_a",0,"question_mark","0", []),
  ("snowy_castle_battlement_stairs_b",0,"question_mark","0", []),
  ("snowy_castle_gate_house_a",0,"question_mark","0", []),
  ("snowy_castle_round_tower_a",0,"question_mark","0", []),
  ("snowy_castle_square_keep_a",0,"question_mark","0", []),
  ("snowy_castle_stairs_a",sokf_type_ladder,"question_mark","0", []),

  ("square_keep_b",0,"question_mark","0", []),
  ("square_keep_c",0,"question_mark","0", []),
  ("square_keep_d",0,"question_mark","0", []),
  ("square_keep_e",0,"question_mark","0", []),
  ("square_keep_f",0,"question_mark","0", []),


  ("square_extension_a",0,"question_mark","0", []),
  ("square_stairs_a",0,"square_stairs_a","bo_square_stairs_a", []),

  ("castle_courtyard_house_a",0,"question_mark","0", []),
  ("castle_courtyard_house_b",0,"castle_courtyard_house_b","bo_castle_courtyard_house_b", []),
  ("castle_courtyard_house_c",0,"castle_courtyard_house_c","bo_castle_courtyard_house_c", []),
  ("castle_courtyard_a",0,"castle_courtyard_a","bo_castle_courtyard_a", []),

  ("gatehouse_b",0,"question_mark","0", []),
  ("castle_gaillard",0,"question_mark","0", []),
  
  ("castle_e_battlement_a",0,"question_mark","0", []),
  ("castle_e_battlement_c",0,"question_mark","0", []),
  ("castle_e_battlement_a_destroyed",0,"question_mark","0", []),

  ("castle_e_sally_door_a",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"castle_e_sally_door_a","bo_castle_e_sally_door_a", [
    check_sally_door_use_trigger,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 3000),
    ]),
     
##   (ti_on_scene_prop_destroy,
##    [
##      (play_sound, "snd_dummy_destroyed"),
##      
##      (try_begin),
##        (multiplayer_is_server),
##        (store_trigger_param_1, ":instance_no"),      
##        (store_trigger_param_2, ":attacker_agent_no"),
##
##        (try_begin),
##          (ge, ":attacker_agent_no", 0),
##          (prop_instance_get_position, pos1, ":instance_no"),
##          (agent_get_position, pos2, ":attacker_agent_no"),
##          (assign, ":rotate_side", 80),
##          (try_begin),
##            (position_is_behind_position, pos2, pos1),
##            (val_mul, ":rotate_side", -1),
##          (try_end),
##        (else_try),
##          (assign, ":rotate_side", 80),
##        (try_end),
##      
##        (position_rotate_x, pos1, ":rotate_side"),
##        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
##      (try_end),
##    ]),     

   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),
		
        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        #(assign, reg0, ":z_difference"),
        #(display_message, "@{!}z dif : {reg0}"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),      
    ]),
  ]),

  ("castle_e_corner",0,"question_mark","0", []),
  ("castle_e_corner_b",0,"question_mark","0", []),
  ("castle_e_corner_c",0,"question_mark","0", []),
  ("castle_e_stairs_a",0,"question_mark","0", []),
  ("castle_e_tower",0,"question_mark","0", []),
  ("castle_e_gate_house_a",0,"castle_e_gate_house_a","bo_castle_e_gate_house_a", []),
  ("castle_e_keep_a",0,"question_mark","0", []),
  ("stand_thatched",0,"stand_thatched","bo_stand_thatched", []),
  ("stand_cloth",0,"stand_cloth","bo_stand_cloth", []),
  ("castle_e_house_a",0,"question_mark","0", []),
  ("castle_e_house_b",0,"question_mark","0", []),

  
  ("arena_block_a",0,"question_mark","0", []),
  ("arena_block_b",0,"question_mark","0", []),
  ("arena_block_c",0,"question_mark","0", []),
  ("arena_block_d",0,"question_mark","0", []),
  ("arena_block_e",0,"question_mark","0", []),
  ("arena_block_f",0,"arena_block_f","bo_arena_block_def", []),
  ("arena_block_g",0,"question_mark","0", []),
  ("arena_block_h",0,"question_mark","0", []),
  ("arena_block_i",0,"question_mark","0", []),

  ("arena_block_j",0,"question_mark","0", []),
  ("arena_block_j_awning",0,"question_mark","0", []),



  ("arena_palisade_a",0,"arena_palisade_a","bo_arena_palisade_a", []),
  ("arena_wall_a",0,"arena_wall_a","bo_arena_wall_ab", []),
  ("arena_wall_b",0,"question_mark","0", []),
  ("arena_barrier_a",0,"arena_barrier_a","bo_arena_barrier_a", []),
  ("arena_barrier_b",0,"arena_barrier_b","bo_arena_barrier_bc", []),
  ("arena_barrier_c",0,"arena_barrier_c","bo_arena_barrier_bc", []),
  ("arena_tower_a",0,"question_mark","0", []),
  ("arena_tower_b",0,"question_mark","0", []),
  ("arena_tower_c",0,"arena_tower_c","bo_arena_tower_abc", []),
  ("arena_spectator_a",0,"arena_spectator_a","0", []),
  ("arena_spectator_b",0,"question_mark","0", []),
  ("arena_spectator_c",0,"question_mark","0", []),
  ("arena_spectator_sitting_a",0,"question_mark","0", []),
  ("arena_spectator_sitting_b",0,"question_mark","0", []),
  ("arena_spectator_sitting_c",0,"question_mark","0", []),


  ("courtyard_gate_a",0,"courtyard_entry_a","bo_courtyard_entry_a", []),
  ("courtyard_gate_b",0,"question_mark","0", []),
  ("courtyard_gate_c",0,"question_mark","0", []),
  ("courtyard_gate_snowy",0,"question_mark","0", []),

  ("castle_tower_a",0,"question_mark","0", []),
  ("castle_battlement_a",0,"castle_battlement_a","bo_castle_battlement_a", []),
  ("castle_battlement_b",0,"question_mark","0", []),
  ("castle_battlement_c",0,"question_mark","0", []),

  ("castle_battlement_a_destroyed",0,"castle_battlement_a_destroyed","bo_castle_battlement_a_destroyed", []),
  ("castle_battlement_b_destroyed",0,"question_mark","0", []),

  ("castle_battlement_corner_a",0,"castle_battlement_corner_a","bo_castle_battlement_corner_a", []),
  ("castle_battlement_corner_b",0,"castle_battlement_corner_b","bo_castle_battlement_corner_b", []),
  ("castle_battlement_corner_c",0,"castle_battlement_corner_c","bo_castle_battlement_corner_c", []),
  ("castle_battlement_stairs_a",0,"castle_battlement_stairs_a","bo_castle_battlement_stairs_a", []),
  ("castle_battlement_stairs_b",0,"castle_battlement_stairs_b","bo_castle_battlement_stairs_b", []),
  ("castle_gate_house_a",0,"question_mark","0", []),
  ("castle_round_tower_a",0,"question_mark","0", []),
  ("castle_square_keep_a",0,"question_mark","0", []),
  ("castle_stairs_a",sokf_type_ladder,"castle_stairs_a","bo_castle_stairs_a", []),

  ("castle_drawbridge_open",0,"question_mark","0", []),
  ("castle_drawbridge_closed",0,"question_mark","0", []),
  ("spike_group_a",0,"spike_group_a","bo_spike_group_a", []),
  ("spike_a",0,"spike_a","bo_spike_a", []),
  ("belfry_a",sokf_moveable,"question_mark", 0, []),

  ("belfry_b",sokf_moveable,"question_mark", 0, []),
  ("belfry_b_platform_a",sokf_moveable,"belfry_b_platform_a","bo_belfry_b_platform_a", []),



  ("belfry_old",0,"question_mark", 0, []),
  ("belfry_platform_a",sokf_moveable,"question_mark", 0, []),
  ("belfry_platform_b",sokf_moveable,"question_mark", 0, []),
  ("belfry_platform_old",0,"question_mark", 0, []),
  ("belfry_wheel",sokf_moveable,"question_mark",0, []),
  ("belfry_wheel_old",0,"question_mark", 0, []),

  ("mangonel",0,"question_mark","0", []),
  ("trebuchet_old",0,"question_mark", 0, []),
  ("trebuchet_new",0,"question_mark", 0, []),

  ("trebuchet_destructible",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible,"question_mark", 0, [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 2400),
    ]),
     
   (ti_on_scene_prop_destroy,
    [          
      (play_sound, "snd_dummy_destroyed"),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (prop_instance_get_position, pos1, ":instance_no"),
        (particle_system_burst, "psys_dummy_smoke_big", pos1, 100),
        (particle_system_burst, "psys_dummy_straw_big", pos1, 100),      
        (position_move_z, pos1, -500),
        (position_rotate_x, pos1, 90),
        (prop_instance_animate_to_position, ":instance_no", pos1, 300), #animate to 6 meters below in 6 second

        (try_begin),
          (eq, "$g_round_ended", 0),
          (scene_prop_get_team, ":scene_prop_team_no", ":instance_no"),
          (try_begin),
            (eq, ":scene_prop_team_no", 0),
            (assign, ":scene_prop_team_no_multiplier", -1), 
          (else_try),
            (assign, ":scene_prop_team_no_multiplier", 1), 
          (try_end),

          (try_begin),
            (eq, "$g_number_of_targets_destroyed", 0),
            
            (store_mul, ":target_no_mul_scene_prop_team", ":scene_prop_team_no_multiplier", 2), #2 means destroyed object is a trebuchet

            #for only server itself-----------------------------------------------------------------------------------------------                                                                                                      
            (call_script, "script_show_multiplayer_message", multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            #for only server itself-----------------------------------------------------------------------------------------------     
            (get_max_players, ":num_players"),                               
            (try_for_range, ":player_no", 1, ":num_players"),
              (player_is_active, ":player_no"),
              (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_show_multiplayer_message, multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            (try_end),
            (val_add, "$g_number_of_targets_destroyed", 1),
          (else_try),
            (store_mul, ":target_no_mul_scene_prop_team", ":scene_prop_team_no_multiplier", 9), #9 means attackers destroyed all targets

            #for only server itself-----------------------------------------------------------------------------------------------      
            (call_script, "script_show_multiplayer_message", multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            #for only server itself-----------------------------------------------------------------------------------------------     
            (get_max_players, ":num_players"),                                
            (try_for_range, ":player_no", 1, ":num_players"),
              (player_is_active, ":player_no"),
              (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_show_multiplayer_message, multiplayer_message_type_target_destroyed, ":target_no_mul_scene_prop_team"), 
            (try_end),
            (val_add, "$g_number_of_targets_destroyed", 1),
          (try_end),
        (try_end),
      (try_end),      
    ]),     

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),
    ]),
  ]),


  ("stone_ball",0,"stone_ball","0", []),

  ("village_house_a",0,"village_house_a","bo_village_house_a", []),
  ("village_house_b",0,"village_house_b","bo_village_house_b", []),
  ("village_house_c",0,"village_house_c","bo_village_house_c", []),
  ("village_house_d",0,"village_house_d","bo_village_house_d", []),
  ("farm_house_a",0,"question_mark","0", []),
  ("farm_house_b",0,"question_mark","0", []),
  ("farm_house_c",0,"question_mark","0", []),
  ("mountain_house_a",0,"mountain_house_a","bo_mountain_house_a", []),
  ("mountain_house_b",0,"mountain_house_b","bo_mountain_house_b", []),
  ("village_hut_a",0,"village_hut_a","bo_village_hut_a", []),
  ("crude_fence",0,"fence","bo_fence", []),
  ("crude_fence_small",0,"crude_fence_small","bo_crude_fence_small", []),
  ("crude_fence_small_b",0,"crude_fence_small_b","bo_crude_fence_small_b", []),
  
  ("ramp_12m",0,"ramp_12m","bo_ramp_12m", []),
  ("ramp_14m",0,"ramp_14m","bo_ramp_14m", []),

  ("siege_ladder_6m",sokf_type_ladder,"siege_ladder_move_6m","bo_siege_ladder_move_6m", []), 
  ("siege_ladder_8m",sokf_type_ladder,"siege_ladder_move_8m","bo_siege_ladder_move_8m", []),
  ("siege_ladder_10m",sokf_type_ladder,"siege_ladder_move_10m","bo_siege_ladder_move_10m", []),
  ("siege_ladder_12m",sokf_type_ladder,"siege_ladder_12m","bo_siege_ladder_12m", []),
  ("siege_ladder_14m",sokf_type_ladder,"siege_ladder_14m","bo_siege_ladder_14m", []),

  ("siege_ladder_move_6m",sokf_type_ladder|sokf_moveable|spr_use_time(2),"siege_ladder_move_6m","bo_siege_ladder_move_6m", [    
   check_item_use_trigger,
   check_ladder_animate_trigger,
   check_ladder_animation_finish_trigger,
  ]),  

  ("siege_ladder_move_8m",sokf_type_ladder|sokf_moveable|spr_use_time(2),"siege_ladder_move_8m","bo_siege_ladder_move_8m", [    
   check_item_use_trigger,
   check_ladder_animate_trigger,
   check_ladder_animation_finish_trigger,
  ]),  

  ("siege_ladder_move_10m",sokf_type_ladder|sokf_moveable|spr_use_time(3),"siege_ladder_move_10m","bo_siege_ladder_move_10m", [    
   check_item_use_trigger,
   check_ladder_animate_trigger,
   check_ladder_animation_finish_trigger,
  ]),  

  ("siege_ladder_move_12m",sokf_type_ladder|sokf_moveable|spr_use_time(3),"question_mark","0", [    
   check_item_use_trigger,
   check_ladder_animate_trigger,
   check_ladder_animation_finish_trigger,
  ]),  

  ("siege_ladder_move_14m",sokf_type_ladder|sokf_moveable|spr_use_time(4),"siege_ladder_move_14m","bo_siege_ladder_move_14m", [    
   check_item_use_trigger,
   check_ladder_animate_trigger,
   check_ladder_animation_finish_trigger,
  ]),  

  ("portcullis",sokf_moveable,"portcullis_a","bo_portcullis_a", []),
  ("bed_a",0,"bed_a","bo_bed_a", []),
  ("bed_b",0,"bed_b","bo_bed_b", []),
  ("bed_c",0,"bed_c","bo_bed_c", []),
  ("bed_d",0,"bed_d","bo_bed_d", []),
  ("bed_e",0,"question_mark","0", []),

  ("bed_f",0,"bed_f","bo_bed_f", []),

  ("towngate_door_left",0,"question_mark","0", []),
  ("towngate_door_right",0,"question_mark","0", []),
  ("towngate_rectangle_door_left",sokf_moveable,"towngate_rectangle_door_left","bo_towngate_rectangle_door_left", []),
  ("towngate_rectangle_door_right",sokf_moveable,"towngate_rectangle_door_right","bo_towngate_rectangle_door_right", []),
  
  ("door_screen",sokf_moveable,"door_screen","0", []),
  ("door_a",sokf_moveable,"door_a","bo_door_a", []),
  ("door_b",sokf_moveable,"door_b","bo_door_a", []),
  ("door_c",sokf_moveable,"question_mark","0", []),
  ("door_d",sokf_moveable,"door_d","bo_door_a", []),
  ("tavern_door_a",sokf_moveable,"tavern_door_a","bo_tavern_door_a", []),
  ("tavern_door_b",sokf_moveable,"tavern_door_b","bo_tavern_door_a", []),
  ("door_e_left",sokf_moveable,"question_mark","0", []),
  ("door_e_right",sokf_moveable,"question_mark","0", []),
  ("door_f_left",sokf_moveable,"question_mark","0", []),
  ("door_f_right",sokf_moveable,"question_mark","0", []),
  ("door_h_left",sokf_moveable,"question_mark","0", []),
  ("door_h_right",sokf_moveable,"question_mark","0", []),
  ("draw_bridge_a",0,"draw_bridge_a","bo_draw_bridge_a", []),
  ("chain_1m",0,"chain_1m","0", []),
  ("chain_2m",0,"chain_2m","0", []),
  ("chain_5m",0,"chain_5m","0", []),
  ("chain_10m",0,"question_mark","0", []),
  ("bridge_modular_a",0,"bridge_modular_a","bo_bridge_modular_a", []),
  ("bridge_modular_b",0,"bridge_modular_b","bo_bridge_modular_b", []),
  ("church_a",0,"church_a","bo_church_a", []),
  ("church_tower_a",0,"church_tower_a","bo_church_tower_a", []),
  ("stone_step_a",0,"floor_stone_a","bo_floor_stone_a", []),
  ("stone_step_b",0,"stone_step_b","0", []),
  ("stone_step_c",0,"stone_step_c","0", []),
  ("stone_heap",0,"stone_heap","bo_stone_heap", []),
  ("stone_heap_b",0,"stone_heap_b","bo_stone_heap", []),

  ("panel_door_a",0,"house_door_a","bo_house_door_a", []),
  ("panel_door_b",0,"house_door_b","bo_house_door_a", []),
  ("smoke_stain",0,"soot_a","0", []),
  ("brazier_with_fire",0,"brazier","bo_brazier",    [
   (ti_on_scene_prop_init,
    [
        (set_position_delta,0,0,85),
        (particle_system_add_new, "psys_brazier_fire_1"),
        (particle_system_add_new, "psys_fire_sparks_1"),

        (set_position_delta,0,0,100),
        (particle_system_add_new, "psys_fire_glow_1"),
        (particle_system_emit, "psys_fire_glow_1",9000000),
    ]),
   ]),

  ("cooking_fire",0,"fire_floor","0",
   [
   (ti_on_scene_prop_init,
    [
        (set_position_delta,0,0,12),
        (particle_system_add_new, "psys_cooking_fire_1"),
        (particle_system_add_new, "psys_fire_sparks_1"),
        (particle_system_add_new, "psys_cooking_smoke"),
        (set_position_delta,0,0,50),
        (particle_system_add_new, "psys_fire_glow_1"),
        (particle_system_emit, "psys_fire_glow_1",9000000),
    ]),
   ]),
  ("cauldron_a",0,"cauldron_a","bo_cauldron_a", []),
  ("fry_pan_a",0,"fry_pan_a","0", []),
  ("tripod_cauldron_a",0,"tripod_cauldron_a","bo_tripod_cauldron_a", []),
  ("tripod_cauldron_b",0,"tripod_cauldron_b","bo_tripod_cauldron_b", []),
  ("open_stable_a",0,"open_stable_a","bo_open_stable_a", []),
  ("open_stable_b",0,"open_stable_b","bo_open_stable_b", []),
  ("plate_a",0,"plate_a","0", []),
  ("plate_b",0,"plate_b","0", []),
  ("plate_c",0,"plate_c","0", []),
  ("lettuce",0,"lettuce","0", []),
  ("hanger",0,"hanger","0", []),
  ("knife_eating",0,"knife_eating","0", []),
  ("colander",0,"colander","0", []),
  ("ladle",0,"ladle","0", []),
  ("spoon",0,"spoon","0", []),
  ("skewer",0,"skewer","0", []),
  ("grape_a",0,"question_mark","0", []),
  ("grape_b",0,"question_mark","0", []),
  ("apple_a",0,"apple_a","0", []),
  ("apple_b",0,"apple_b","0", []),
  ("maize_a",0,"question_mark","0", []),
  ("maize_b",0,"question_mark","0", []),
  ("cabbage",0,"cabbage","0", []),
  ("flax_bundle",0,"raw_flax","0",[]),
  ("olive_plane",0,"question_mark","0",[]),
  ("grapes_plane",0,"question_mark","0",[]),
  ("date_fruit_plane",0,"question_mark","0",[]),
  ("bowl",0,"bowl_big","0",[]),
  ("bowl_small",0,"bowl_small","0",[]),
  ("dye_blue",0,"raw_dye_blue","0",[]),
  ("dye_red",0,"raw_dye_red","0",[]),
  ("dye_yellow",0,"raw_dye_yellow","0",[]),
  ("basket",0,"basket_small","0",[]),
  ("basket_big",0,"basket_large","0",[]),
  ("basket_big_green",0,"basket_big","0",[]),
  ("leatherwork_frame",0,"leatherwork_frame","0", []),

  ("cabbage_b",0,"cabbage_b","0", []),
  ("bean",0,"bean","0", []),
  ("basket_a",0,"basket_a","bo_basket_a", []),
  ("feeding_trough_a",0,"feeding_trough_a","bo_feeding_trough_a", []),


  ("marrow_a",0,"marrow_a","0", []),
  ("marrow_b",0,"marrow_b","0", []),
  ("squash_plant",0,"marrow_c","0", []),


  ("gatehouse_new_a",0,"question_mark","0", []),
  ("gatehouse_new_b",0,"question_mark","0", []),
  ("gatehouse_new_snowy_a",0,"question_mark","0", []),

  ("winch",sokf_moveable,"question_mark","0", []),
  
  ("winch_b",sokf_moveable|spr_use_time(5),"question_mark","0", [
   (ti_on_scene_prop_use,
    [
      (store_trigger_param_1, ":agent_id"),
      (store_trigger_param_2, ":instance_id"),

      #for only server itself-----------------------------------------------------------------------------------------------
      (call_script, "script_use_item", ":instance_id", ":agent_id"),
      #for only server itself-----------------------------------------------------------------------------------------------
      (get_max_players, ":num_players"),                               
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server so starting from 1
        (player_is_active, ":player_no"),
        (multiplayer_send_2_int_to_player, ":player_no", multiplayer_event_use_item, ":instance_id", ":agent_id"),
      (try_end),
    ]),
  ]),
  
  ("drawbridge",0,"question_mark","0", []),
  ("gatehouse_door_left",sokf_moveable,"question_mark","0", []),
  ("gatehouse_door_right",sokf_moveable,"question_mark","0", []),

  ("cheese_a",0,"cheese_a","0", []),
  ("cheese_b",0,"cheese_b","0", []),
  ("cheese_slice_a",0,"cheese_slice_a","0", []),
  ("bread_a",0,"bread_a","0", []),
  ("bread_b",0,"bread_b","0", []),
  ("bread_slice_a",0,"bread_slice_a","0", []),
  ("fish_a",0,"fish_a","0", []),
  ("fish_roasted_a",0,"fish_roasted_a","0", []),
  ("chicken_roasted",0,"chicken","0", []),
  ("food_steam",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (set_position_delta,0,0,0),
     (particle_system_add_new, "psys_food_steam"),
    ]),
   ]),
  ########################
  ("city_smoke",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (store_time_of_day,reg(12)),
     (neg|is_between,reg(12),5,20),
     (set_position_delta,0,0,0),
     (particle_system_add_new, "psys_night_smoke_1"),
    ]),
   ]),
    ("city_fire_fly_night",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (store_time_of_day,reg(12)),
     (neg|is_between,reg(12),5,20),
     (set_position_delta,0,0,0),
     (particle_system_add_new, "psys_fire_fly_1"),
    ]),
   ]),
    ("city_fly_day",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_bug_fly_1"),
    ]),
   ]),
    ("flue_smoke_tall",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_flue_smoke_tall"),
    ]),
   ]),
      ("flue_smoke_short",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_flue_smoke_short"),
    ]),
   ]),
      ("moon_beam",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_moon_beam_1"),
     (particle_system_add_new, "psys_moon_beam_paricle_1"),
    ]),
   ]),
    ("fire_small",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_fireplace_fire_small"),
    ]),
   ]),
  ("fire_big",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_fireplace_fire_big"),
    ]),
   ]),
    ("battle_field_smoke",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_war_smoke_tall"),
    ]),
   ]),
      ("Village_fire_big",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_village_fire_big"),
     (set_position_delta,0,0,100),
     (particle_system_add_new, "psys_village_fire_smoke_big"),
    ]),
   ]),
  #########################
  ("candle_a",0,"candle_a","0",
   [
   (ti_on_scene_prop_init,
    [
     (set_position_delta,0,0,27),
     (particle_system_add_new, "psys_candle_light"),
    ]),
   ]),
  ("candle_b",0,"candle_b","0",
   [
   (ti_on_scene_prop_init,
    [
     (set_position_delta,0,0,25),
     (particle_system_add_new, "psys_candle_light"),
    ]),
   ]),
  ("candle_c",0,"question_mark","0",   [
   (ti_on_scene_prop_init,
    [
     (set_position_delta,0,0,10),
     (particle_system_add_new, "psys_candle_light_small"),
    ]),
   ]),
  ("lamp_a",0,"lamp_a","0",   [
   (ti_on_scene_prop_init,
    [
     (set_position_delta,66,0,2),
     (particle_system_add_new, "psys_candle_light"),
    ]),
   ]),

  ("lamp_b",0,"lamp_b","0",   [
   (ti_on_scene_prop_init,
    [
     (set_position_delta,65,0,-7),
     (particle_system_add_new, "psys_lamp_fire"),
     (set_position_delta,70,0,-5),
     (particle_system_add_new, "psys_fire_glow_1"),
     (particle_system_emit, "psys_fire_glow_1",9000000),
     (play_sound, "snd_fire_loop", 0),
    ]),
   ]),

  ("hook_a",0,"hook_a","0", []),
  ("window_night",0,"question_mark","0", []),
  ("fried_pig",0,"pork","0", []),
  ("village_oven",0,"village_oven","bo_village_oven", []),
  ("dungeon_water_drops",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_dungeon_water_drops"),
    ]),
   ]),
  ("shadow_circle_1",0,"shadow_circle_1","0", []),
  ("shadow_circle_2",0,"shadow_circle_2","0", []),
  ("shadow_square_1",0,"shadow_square_1","0", []),
  ("shadow_square_2",0,"shadow_square_2","0", []),
  ("wheelbarrow",0,"wheelbarrow","bo_wheelbarrow", []),
  ("gourd",sokf_moveable|sokf_destructible|spr_hit_points(1),"gourd","bo_gourd",
   [
     (ti_on_scene_prop_destroy,
      [
        (store_trigger_param_1, ":instance_no"),
        (val_add, "$g_last_destroyed_gourds", 1),
        (prop_instance_get_position, pos1, ":instance_no"),
        (copy_position, pos2, pos1),
        (position_set_z, pos2, -100000),
        (particle_system_burst, "psys_gourd_smoke", pos1, 2),
        (particle_system_burst, "psys_gourd_piece_1", pos1, 1),
        (particle_system_burst, "psys_gourd_piece_2", pos1, 5),
        (prop_instance_animate_to_position, ":instance_no", pos2, 1),
        (play_sound, "snd_gourd_destroyed"),
        ]),
     ]),

 ("gourd_spike",sokf_moveable,"gourd_spike","bo_gourd_spike",[]),

 ("obstacle_fence_1",0,"fence","bo_fence", []),
 ("obstacle_fallen_tree_a",0,"destroy_tree_a","bo_destroy_tree_a", []),
 ("obstacle_fallen_tree_b",0,"destroy_tree_b","bo_destroy_tree_b", []),
 ("siege_wall_a",0,"siege_wall_a","bo_siege_wall_a", []),
 ("siege_large_shield_a",0,"siege_large_shield_a","bo_siege_large_shield_a", []), #siege warfare use as mantles.
 ("granary_a",0,"question_mark","0", []),
 ("small_wall_connect_a",0,"small_wall_connect_a","bo_small_wall_connect_a", []),

 ("full_stable_a",0,"full_stable_a","bo_full_stable_a", []),
 ("full_stable_b",0,"full_stable_b","bo_full_stable_b", []),
 ("full_stable_c",0,"full_stable_c","bo_full_stable_c", []),
 ("full_stable_d",0,"question_mark","0", []),

 ("arabian_house_a",0,"question_mark","0", []),
 ("arabian_house_b",0,"question_mark","0", []),
 ("arabian_house_c",0,"question_mark","0", []),
 ("arabian_house_d",0,"question_mark","0", []),
 ("arabian_house_e",0,"question_mark","0", []),
 ("arabian_house_f",0,"question_mark","0", []),
 ("arabian_house_g",0,"question_mark","0", []),
 ("arabian_house_h",0,"question_mark","0", []),
 ("arabian_house_i",0,"question_mark","0", []),
 ("arabian_square_keep_a",0,"question_mark","0", []),
 ("arabian_passage_house_a",0,"question_mark","0", []),
 ("arabian_wall_a",0,"question_mark","0", []),
 ("arabian_wall_b",0,"arabian_wall_b","bo_arabian_wall_b", []),
 ("arabian_ground_a",0,"arabian_ground_a","bo_arabian_ground_a", []),
 ("arabian_parterre_a",0,"arabian_parterre_a","bo_arabian_parterre_a", []),
 ("well_shaft",0,"question_mark","0", []),
 ("horse_mill",0,"question_mark","0", []),
 ("horse_mill_collar",0,"question_mark","0", []),
 ("arabian_stable",0,"question_mark","0", []),
 ("arabian_tent",0,"question_mark","0", []),
 ("arabian_tent_b",0,"question_mark","0", []),
 ("desert_plant_a",0,"question_mark","0", []),

 ("arabian_castle_battlement_a",0,"question_mark","0", []),
 ("arabian_castle_battlement_b_destroyed",0,"question_mark","0", []),
 ("arabian_castle_battlement_c",0,"question_mark","0", []),
 ("arabian_castle_battlement_d",0,"question_mark","0", []),
 ("arabian_castle_corner_a",0,"question_mark","0", []),
 ("arabian_castle_stairs",0,"question_mark","0", []),
 ("arabian_castle_stairs_b",0,"question_mark","0", []),
 ("arabian_castle_stairs_c",0,"question_mark","0", []),
 ("arabian_castle_battlement_section_a",0,"question_mark","0", []),
 ("arabian_castle_gate_house_a",0,"question_mark","0", []),
 ("arabian_castle_house_a",0,"question_mark","0", []),
 ("arabian_castle_house_b",0,"question_mark","0", []),
 ("arabian_castle_keep_a",0,"question_mark","0", []),


 ("arabian_house_a2",0,"question_mark","0", []),
 ("arabian_village_house_a",0,"question_mark","0", []),
 ("arabian_village_house_b",0,"question_mark","0", []),
 ("arabian_village_house_c",0,"question_mark","0", []),
 ("arabian_village_house_d",0,"question_mark","0", []),

 ("arabian_village_stable",0,"question_mark","0", []),
 ("arabian_village_hut",0,"question_mark","0", []),
 ("arabian_village_stairs",0,"question_mark","0", []),

 ("tree_a01",0,"tree_a01","bo_tree_a01", []),

 ("stairs_a",sokf_type_ladder,"stairs_a","bo_stairs_a", []),

 ("headquarters_flag_red",sokf_moveable|sokf_face_player,"question_mark","0", []),
 ("headquarters_flag_blue",sokf_moveable|sokf_face_player,"question_mark","0", []),
 ("headquarters_flag_gray",sokf_moveable|sokf_face_player,"question_mark","0", []),  

 ("headquarters_flag_red_code_only",sokf_moveable|sokf_face_player,"question_mark","0", []),
 ("headquarters_flag_blue_code_only",sokf_moveable|sokf_face_player,"question_mark","0", []),
 ("headquarters_flag_gray_code_only",sokf_moveable|sokf_face_player,"mp_flag_white","0", []),  
 ("headquarters_pole_code_only",sokf_moveable,"mp_flag_pole","0", []),

 ("headquarters_flag_team_1",sokf_moveable|sokf_face_player,"mp_objective_banner_team_norse","0", []),
 ("headquarters_flag_team_2",sokf_moveable|sokf_face_player,"mp_objective_banner_team_saxon","0", []),
 ("headquarters_flag_team_3",sokf_moveable|sokf_face_player,"mp_objective_banner_team_angle","0", []),
 ("headquarters_flag_team_4",sokf_moveable|sokf_face_player,"mp_objective_banner_team_welsh","0", []),
 ("headquarters_flag_team_5",sokf_moveable|sokf_face_player,"mp_objective_banner_team_irish","0", []),
 ("headquarters_flag_team_6",sokf_moveable|sokf_face_player,"mp_objective_banner_team_scotch","0", []),
 ("headquarters_flag_rebel",sokf_moveable|sokf_face_player,"mp_objective_banner_team_rebel","0", []),

 ("glow_a", 0, "glow_a", "0", []),
 ("glow_b", 0,"question_mark","0", []),

 ("arabian_castle_corner_b",0,"question_mark","0", []),

  ("dummy_a_undestructable",sokf_destructible,"arena_archery_target_b","bo_arena_archery_target_b",
   [
     (ti_on_init_scene_prop,
      [
        (store_trigger_param_1, ":instance_no"),
        (scene_prop_set_hit_points, ":instance_no", 10000000),
        ]),
     (ti_on_scene_prop_hit,
      [
        (store_trigger_param_1, ":instance_no"),
        (store_trigger_param_2, ":damage"),
        (try_begin),
          (set_fixed_point_multiplier, 1),
          (position_get_x, ":attacker_agent_id", pos2),
          (get_player_agent_no, ":player_agent"),
          (eq, ":player_agent", ":attacker_agent_id"),
          (assign, reg60, ":damage"),
          (display_message, "str_delivered_damage"),
          (eq, "$g_tutorial_training_ground_horseman_trainer_state", 6),
          (eq, "$g_tutorial_training_ground_horseman_trainer_completed_chapters", 1),
          (prop_instance_get_variation_id_2, ":var_id_2", ":instance_no"),
          (val_sub, ":var_id_2", 1),
          (eq, "$g_tutorial_training_ground_current_score", ":var_id_2"),
          (val_add, "$g_tutorial_training_ground_current_score", 1),
        (try_end),
        (play_sound, "snd_dummy_hit"),
        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
    ]),
  ]),
 ("cave_entrance_1",0,"cave_entrance_1","bo_cave_entrance_1", []),

  ("pointer_arrow", 0, "pointer_arrow", "0", []),
  ("fireplace_d_interior",0,"fireplace_d","bo_fireplace_d", []),
  ("ship_sail_off",0,"ship_sail_off","bo_ship_sail_off", []),
  ("ship_sail_off_b",0,"ship_sail_off_b","bo_ship_sail_off", []),
  ("ship_c_sail_off",0,"question_mark","0", []),
  ("ramp_small_a",0,"ramp_small_a","bo_ramp_small_a", []),
  ("castle_g_battlement_b",0,"question_mark","0", []),
  ("box_a_dynamic",sokf_moveable|sokf_dynamic_physics,"box_a","bo_box_a", []),
  
  ("barrel_dynamic",sokf_moveable|sokf_dynamic_physics,"question_mark","0", []),

 ("desert_field",0,"question_mark","0", []),

 ("water_river",0,"water_plane","0", []),
 ("viking_house_a",0,"question_mark","0", []),
 ("viking_house_b",0,"question_mark","0", []),
 ("viking_house_c",0,"question_mark","0", []),
 ("viking_house_d",0,"question_mark","0", []),
 ("viking_house_e",0,"question_mark","0", []),
 ("viking_stable_a",0,"question_mark","0", []),
 ("viking_keep",0,"question_mark","0", []),

 ("viking_house_c_destroy",0,"question_mark","0", []),
 ("viking_house_b_destroy",0,"question_mark","0", []),

 ("harbour_a",0,"harbour_a","bo_harbour_a", []),
 ("sea_foam_a",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_sea_foam_a"),
    ]),
   ]),
   
 ("viking_keep_destroy",0,"question_mark","0", []),
 ("viking_keep_destroy_door",0,"viking_keep_destroy_door","bo_viking_keep_destroy_door", []),
 ("earth_tower_small_b",0,"earth_tower_small_b","bo_earth_tower_small_b", []),
 ("earth_gate_house_b",0,"earth_gate_house_b","bo_earth_gate_house_b", []),
 ("earth_tower_a",0,"earth_tower_a","bo_earth_tower_a", []),
 ("earth_stairs_c",0,"earth_stairs_c","bo_earth_stairs_c", []),
 
  ("earth_sally_gate_left",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"earth_sally_gate_left","bo_earth_sally_gate_left", [
    check_sally_door_use_trigger_double,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 2000),
    ]),
     
   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),      
    ]),
  ]),

  ("earth_sally_gate_right",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"earth_sally_gate_right","bo_earth_sally_gate_right", [
    check_sally_door_use_trigger_double,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 2000),
    ]),
     
   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),      
    ]),
  ]),

 #("earth_sally_gate_left",0,"earth_sally_gate_left","bo_earth_sally_gate_left", []),
 #("earth_sally_gate_right",0,"earth_sally_gate_right","bo_earth_sally_gate_right", []),


  ("barrier_box",sokf_invisible|sokf_type_barrier3d,"barrier_box","bo_barrier_box", []),
  ("barrier_capsule",sokf_invisible|sokf_type_barrier3d,"barrier_capsule","bo_barrier_capsule", []),
  ("barrier_cone" ,sokf_invisible|sokf_type_barrier3d,"barrier_cone" ,"bo_barrier_cone" , []),
  ("barrier_sphere" ,sokf_invisible|sokf_type_barrier3d,"barrier_sphere" ,"bo_barrier_sphere" , []),

  ("viking_keep_destroy_sally_door_right",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"viking_keep_destroy_sally_door_right","bo_viking_keep_destroy_sally_door_right", [
    check_sally_door_use_trigger_double,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 3000),
    ]),
     
   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),      
    ]),
  ]),

  ("viking_keep_destroy_sally_door_left",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"viking_keep_destroy_sally_door_left","bo_viking_keep_destroy_sally_door_left", [
    check_sally_door_use_trigger_double,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 3000),
    ]),
     
   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       

    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),      
    ]),
  ]),

  ("castle_f_door_b",sokf_moveable|sokf_show_hit_point_bar|sokf_destructible|spr_use_time(0),"castle_e_sally_door_a","bo_castle_e_sally_door_a", [
    check_castle_door_use_trigger,

   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 1000),
    ]),
     
   (ti_on_scene_prop_destroy,
    [
      (play_sound, "snd_dummy_destroyed"),
      
      (assign, ":rotate_side", 86),
      
      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (store_trigger_param_1, ":instance_no"),      
        (store_trigger_param_2, ":attacker_agent_no"),

        (set_fixed_point_multiplier, 100),
        (prop_instance_get_position, pos1, ":instance_no"),

        (try_begin),
          (ge, ":attacker_agent_no", 0),
          (agent_get_position, pos2, ":attacker_agent_no"),
          (try_begin),
            (position_is_behind_position, pos2, pos1),
            (val_mul, ":rotate_side", -1),
          (try_end),
        (try_end),
      
        (init_position, pos3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (position_move_y, pos3, -100),
        (else_try),
          (position_move_y, pos3, 100),
        (try_end),
      
        (position_move_x, pos3, -50),
        (position_transform_position_to_parent, pos4, pos1, pos3),
        (position_move_z, pos4, 100),
        (position_get_distance_to_ground_level, ":height_to_terrain", pos4),
        (val_sub, ":height_to_terrain", 100),
        (assign, ":z_difference", ":height_to_terrain"),
        #(assign, reg0, ":z_difference"),
        #(display_message, "@{!}z dif : {reg0}"),
        (val_div, ":z_difference", 3),

        (try_begin),
          (ge, ":rotate_side", 0),
          (val_add, ":rotate_side", ":z_difference"),
        (else_try),
          (val_sub, ":rotate_side", ":z_difference"),
        (try_end),

        (position_rotate_x, pos1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", pos1, 70), #animate to position 1 in 0.7 second
      (try_end),
    ]),       
  
    (ti_on_scene_prop_hit,
    [
      (store_trigger_param_1, ":instance_no"),       
      (store_trigger_param_2, ":damage"),
      
      (try_begin),
        (scene_prop_get_hit_points, ":hit_points", ":instance_no"),
        (val_sub, ":hit_points", ":damage"),
        (gt, ":hit_points", 0),
        (play_sound, "snd_dummy_hit"),
      (else_try),
        (neg|multiplayer_is_server),
        (play_sound, "snd_dummy_destroyed"),
      (try_end),

      (try_begin),
        (this_or_next|multiplayer_is_server),
		(neg|game_in_multiplayer_mode),

        (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
      (try_end),      
    ]),
  ]),

 ("mp_ctf_flag_team_1", sokf_moveable|sokf_face_player, "mp_ctf_flag_team_norse", "0", []),
 ("mp_ctf_flag_team_2", sokf_moveable|sokf_face_player, "mp_ctf_flag_team_saxon", "0", []),
 ("mp_ctf_flag_team_3", sokf_moveable|sokf_face_player, "mp_ctf_flag_team_angle", "0", []),
 ("mp_ctf_flag_team_4", sokf_moveable|sokf_face_player, "mp_ctf_flag_team_welsh", "0", []),
 ("mp_ctf_flag_team_5", sokf_moveable|sokf_face_player, "mp_ctf_flag_team_irish", "0", []),
 ("mp_ctf_flag_team_6", sokf_moveable|sokf_face_player, "question_mark", "0", []),
 ("mp_ctf_flag_team_rebel", sokf_moveable|sokf_face_player, "mp_ctf_flag_team_rebel", "0", []),

  ("arabian_lighthouse_a",0,"question_mark","0", []),
  ("arabian_ramp_a",0,"question_mark","0", []),
  ("arabian_ramp_b",0,"arabian_ramp_b","bo_arabian_ramp_b", []),
  
  ("winery_interior",0,"winery_interior","bo_winery_interior", []),
  ("winery_barrel_shelf",0,"winery_barrel_shelf","bo_winery_barrel_shelf", []),
  ("winery_wall_shelf",0,"winery_wall_shelf","bo_winery_wall_shelf", []),
  ("winery_huge_barrel",0,"winery_huge_barrel","bo_winery_huge_barrel", []),
  ("winery_wine_press",0,"question_mark","0", []),
  ("winery_middle_barrel",0,"winery_middle_barrel","bo_winery_middle_barrel", []),
  ("winery_wine_cart_small_loaded",0,"winery_wine_cart_small_loaded","bo_winery_wine_cart_small_loaded", []),
  ("winery_wine_cart_small_empty",0,"winery_wine_cart_small_empty","bo_winery_wine_cart_small_empty", []),
  ("winery_wine_cart_empty",0,"winery_wine_cart_empty","bo_winery_wine_cart_empty", []),
  ("winery_wine_cart_loaded",0,"winery_wine_cart_loaded","bo_winery_wine_cart_loaded", []),
  
  ("weavery_interior",0,"question_mark","0", []),
  ("weavery_loom_a",0,"question_mark","0", []),
  ("weavery_spinning_wheel",0,"question_mark","0", []),
  
  ("mill_interior",0,"mill_interior","bo_mill_interior", []),
  ("mill_flour_sack", 0,"mill_flour_sack","bo_mill_flour_sack", []),
  ("mill_flour_sack_desk_a", 0,"mill_flour_sack_desk_a","bo_mill_flour_sack_desk_a", []),
  ("mill_flour_sack_desk_b", 0,"mill_flour_sack_desk_b","bo_mill_flour_sack_desk_b", []),
  
  ("smithy_interior", 0,"question_mark","0", []),
  ("smithy_grindstone_wheel", 0,"smithy_grindstone_wheel","bo_smithy_grindstone_wheel", []),
  ("smithy_forge_bellows", 0,"question_mark","0", []),
  ("smithy_forge", 0,"question_mark","0", []),
  ("smithy_anvil", 0,"smithy_anvil","bo_smithy_anvil", []),
  
  ("tannery_hide_a", 0,"tannery_hide_a","bo_tannery_hide_a", []),
  ("tannery_hide_b", 0,"question_mark","0", []),
  ("tannery_pools_a", 0,"question_mark","0", []),
  ("tannery_pools_b", 0,"question_mark","0", []),
  



  
  
 

 ("fountain", 0, "fountain", "bo_fountain", []),

 ("rhodok_houses_a",0,"question_mark","0", []),
 ("rhodok_houses_b",0,"question_mark","0", []),
 ("rhodok_houses_c",0,"question_mark","0", []),
 ("rhodok_houses_d",0,"rhodok_houses_d","bo_rhodok_houses_d", []),
 ("rhodok_houses_e",0,"question_mark","0", []),
 ("rhodok_house_passage_a",0,"rhodok_house_passage_a","bo_rhodok_house_passage_a", []),

 ("bridge_b",0,"bridge_b","bo_bridge_b", []),
 
("brewery_pool", 0,"question_mark","0", []),
("brewery_big_bucket", 0,"brewery_big_bucket","bo_brewery_big_bucket", []),
("brewery_interior", 0,"question_mark","0", []),
("brewery_bucket_platform_a", 0,"brewery_bucket_platform_a","bo_brewery_bucket_platform_a", []),
("brewery_bucket_platform_b", 0,"brewery_bucket_platform_b","bo_brewery_bucket_platform_b", []),


("weavery_dye_pool_r",0,"question_mark","0", []),
("weavery_dye_pool_y",0,"question_mark","0", []),
("weavery_dye_pool_b",0,"question_mark","0", []),
("weavery_dye_pool_p",0,"question_mark","0", []),
("weavery_dye_pool_g",0,"question_mark","0", []),

("oil_press_interior",0,"question_mark","0", []),

    ("city_swad_01" ,0,"question_mark" ,"0" , []),
    ("city_swad_02" ,0,"question_mark" ,"0" , []),
    ("city_swad_03" ,0,"question_mark" ,"0" , []),
    ("city_swad_04" ,0,"question_mark" ,"0" , []),
    ("city_swad_passage_01" ,0,"city_swad_passage_01" ,"bo_city_swad_passage_01" , []),
    ("city_swad_05" ,0,"question_mark","0", []),

  ("arena_block_j_a",0,"question_mark","0", []),
  ("arena_underway_a",0,"question_mark","0", []),
  ("arena_circle_a",0,"question_mark","0", []),

  ("rope_bridge_15m",0,"rope_bridge_15m","bo_rope_bridge_15m", []),
  ("tree_house_a",0,"tree_house_a","bo_tree_house_a", []),
  ("tree_house_guard_a",0,"tree_house_guard_a","bo_tree_house_guard_a", []),
  ("tree_house_guard_b",0,"tree_house_guard_b","bo_tree_house_guard_b", []),
  ("tree_shelter_a",0,"tree_shelter_a","bo_tree_shelter_a", []),
  ("yellow_fall_leafs_a",0,"0","0",
   [
   (ti_on_scene_prop_init,
    [
     (particle_system_add_new, "psys_fall_leafs_a"),
    ]),
   ]),
   
 ("rock_bridge_a",0,"rock_bridge_a","bo_rock_bridge_a", []),
 ("suspension_bridge_a",0,"question_mark","0", []),
 ("mine_a",0,"mine_a","bo_mine_a", []),

  #Adorno scene props variados chief

("ado_saxon_wall_defence",0,"question_mark","0", []),
("ado_saxon_wall_defence_wood",0,"ado_saxon_wall_defence_wood","bo_ado_saxon_wall_defence_wood", []),
#destroy version
("ado_saxon_wall_defence_wood_destroy",0,"ado_saxon_wall_defence_wood_destroy","bo_ado_saxon_wall_defence_wood_destroy", []),
("ado_saxon_shed",0,"ado_saxon_shed","bo_ado_saxon_shed", []),
("ado_saxon_shed_2",0,"ado_saxon_shed_2","bo_ado_saxon_shed_2", []),
("ado_stockade_single",0,"ado_stockade_single","bo_ado_stockade_single", []),

("ado_stockade_short",0,"ado_stockade_short","bo_ado_stockade_short", []),
("ado_stockade_7m",0,"ado_stockade_7m","bo_ado_stockade_7m", []),
("ado_palisade_fence",0,"ado_palisade_fence","bo_ado_palisade_fence", []),
("ado_palisade_fence_module",0,"ado_palisade_fence_module","bo_ado_palisade_fence_module", []),
("ado_palisade_fence_log",0,"ado_palisade_fence_log","bo_ado_palisade_fence_log", []),

("ado_saxon_stairs_9step",0,"ado_saxon_stairs_9step","bo_ado_saxon_stairs_9step", []),
("ado_fence_pen",0,"ado_fence_pen","bo_ado_fence_pen", []),
("ado_fence_pen_module",0,"ado_fence_pen_module","bo_ado_fence_pen_module", []),  
##meadhall
("ado_interior_meadhall",0,"ado_interior_meadhall","bo_ado_interior_meadhall", []),  
("ado_interior_hearth_oblong",0,"ado_interior_hearth_oblong","bo_ado_interior_hearth_oblong", []),  
  
###adorono scene props varios acaba chief
### PHAIAK  chief sea battles begin (
### PHAIAK begin (

  ("lightning_test1",0,"0","0", []),	
  ("lightning_test2",0,"0","0", []),
  ("lightning_test3",0,"0","0", []),
	
 ("box_test1", 0,"0","0", []),
 ("box_test2", 0,"0","0", []),
 ("box_test3", 0,"0","0", []),
 
 #decapitation
 ("head", sokf_moveable|sokf_dynamic_physics,"head","bo_head",
  [
    (ti_on_init_scene_prop,
     [
        (store_trigger_param_1, ":head_id"),

        (set_fixed_point_multiplier, 100),
        (position_set_x, pos11, 500), #mass = 5.00 kg
        (position_set_y, pos11, 90), #friction coefficient = 0.90 (skin 0.80 - 1.00)
        (position_set_z, pos11, 0), #reserved
        (prop_instance_dynamics_set_properties, ":head_id", pos11),

        (position_set_x, pos11, 500),
        (position_set_y, pos11, 250),
        (position_set_z, pos11, 100),
        (prop_instance_dynamics_set_omega, ":head_id", pos11), #spin

        (position_set_x, pos11, 100),
        (position_set_y, pos11, 300),
        (position_set_z, pos11, -400),
        (prop_instance_dynamics_apply_impulse, ":head_id", pos11), #force
     ]),
  ]),
 
 ("wind", 0, "0", "0", []),
 
 ("agent_blade", sokf_moveable, "0", "bo_agent_blade", []),
	# ("agent_blade", sokf_moveable, "agent_blade", "bo_agent_blade", []),
 
 ("barrier_ship", sokf_moveable|sokf_invisible,"barrier_ship","bo_barrier_ship", []),
 
 ("ship1_destroyed",	0,"ship1_destroyed", "0", []),
 ("ship2_destroyed",	0,"ship2_destroyed", "0", []),

 ("dyn_ship_substrate", 0, "0","0", [  ]),
 ("dyn_ship_substrate_2", 0, "0","0", [  ]),
  
 #DYN_SHIP PROPS:
 ("dyn_ship_main_busse_no_coll",	0,"busse", "0", []),  
 ("dyn_ship_main_skeid_no_coll",	0,"hedeby1", "0", []),
 ("dyn_ship_main_karvi_no_coll",	0,"karvi", "0", []),
 ("dyn_ship_main_snekkja_no_coll",	0,"snekkja", "0", []),
 ("dyn_ship_main_knorr_no_coll",	0,"knorr", "0", []), 
 ("dyn_ship_main_byrding_no_coll",	0,"byrding", "0", []),
 ("dyn_ship_main_curragh_no_coll",	0,"0", "0", []),
 ("dyn_ship_main_skeid2_no_coll",	0,"0", "0", []),
 
 ("dyn_ship_main_busse",	sokf_moveable,"busse","bo_busse", []),  
 ("dyn_ship_main_skeid",	sokf_moveable, "hedeby1","bo_hedeby1", []),
 ("dyn_ship_main_karvi",	sokf_moveable, "karvi","bo_karvi", []),
 ("dyn_ship_main_snekkja",	sokf_moveable, "snekkja","bo_snekkja", []),
 ("dyn_ship_main_knorr",	sokf_moveable,"knorr","bo_knorr", []), 		#(check_ship_hit_trigger), causes CTD for some reason
 ("dyn_ship_main_byrding",	sokf_moveable,"byrding","bo_byrding", []),
 ("dyn_ship_main_curragh",	sokf_moveable,"0","0", []),
 ("dyn_ship_main_skeid2",	sokf_moveable,"0","0", []),
 ("dyn_ship_main_end",0, "0", "0", []),
 ("dyn_ship_boom_busse",	0,"busse_boom", "0", []),  	#sokf_static_movement
 ("dyn_ship_boom_skeid",	0,"hedeby1_boom", "0", []),
 ("dyn_ship_boom_karvi",	0,"karvi_boom", "0", []),
 ("dyn_ship_boom_snekkja",	0,"snekkja_boom", "0", []),
 ("dyn_ship_boom_knorr",	0,"knorr_boom", "0", []), 
 ("dyn_ship_boom_byrding",	0,"byrding_boom", "0", []),
 ("dyn_ship_boom_curragh",	0,"0", "0", []),
 ("dyn_ship_boom_skeid2",	0,"0", "0", []),
 ("dyn_ship_boom_end",0, 0, 0, []), 
 
 # #WITH MOVABLE FLAG !!!
 ("dyn_ship_coll_busse",	sokf_moveable|sokf_invisible, "0", "bo_busse_collision", []),  
 ("dyn_ship_coll_skeid",	sokf_moveable|sokf_invisible, "0", "bo_hedeby1_collision", []),
 ("dyn_ship_coll_karvi",	sokf_moveable|sokf_invisible,"0", "bo_karvi_collision", []),
 ("dyn_ship_coll_snekkja",	sokf_moveable|sokf_invisible,"0", "bo_snekkja_collision", []),
 ("dyn_ship_coll_knorr",	sokf_moveable|sokf_invisible,"0", "bo_knorr_collision", []), 
 ("dyn_ship_coll_byrding",	sokf_moveable|sokf_invisible,"0", "bo_byrding_collision", []),
 ("dyn_ship_coll_curragh",	0, "0", "0", []),
 ("dyn_ship_coll_skeid2",	0, "0", "0", []),
 ("dyn_ship_coll_end",0, 0, 0, []), 
 ("dyn_ship_coll2_busse",	sokf_moveable|sokf_invisible,"0", "bo_busse_collision_2", []),  
 ("dyn_ship_coll2_skeid",	sokf_moveable|sokf_invisible,"0", "bo_hedeby1_collision_2", []),
 ("dyn_ship_coll2_karvi",	sokf_moveable|sokf_invisible,"0", "bo_karvi_collision_2", []),
 ("dyn_ship_coll2_snekkja",	sokf_moveable|sokf_invisible,"0", "bo_snekkja_collision_2", []),
 ("dyn_ship_coll2_knorr",	sokf_moveable|sokf_invisible,"0", "bo_knorr_collision_2", []), 
 ("dyn_ship_coll2_byrding",	sokf_moveable|sokf_invisible,"0", "bo_byrding_collision_2", []),
 ("dyn_ship_coll2_curragh",	0, "0", "0", []),
 ("dyn_ship_coll2_skeid2",	0, "0", "0", []),
 ("dyn_ship_coll2_end",0, 0, 0, []), 
	 # ("dyn_ship_ramp_right_busse",	sokf_moveable|sokf_missiles_not_attached, "busse_ramp_right", "bo_busse_ramp_right", []),  
	 # ("dyn_ship_ramp_right_skeid",	sokf_moveable|sokf_missiles_not_attached, "hedeby1_ramp_right", "bo_hedeby1_ramp_right", []),
	 # ("dyn_ship_ramp_right_karvi",	sokf_moveable|sokf_missiles_not_attached, "karvi_ramp_right", "bo_karvi_ramp_right", []),
	 # ("dyn_ship_ramp_right_snekkja",sokf_moveable|sokf_missiles_not_attached, "snekkja_ramp_right", "bo_snekkja_ramp_right", []),
	 # ("dyn_ship_ramp_right_knorr",	sokf_moveable|sokf_missiles_not_attached, "knorr_ramp_right", "bo_knorr_ramp_right", []), 	
	 # ("dyn_ship_ramp_right_byrding",sokf_moveable|sokf_missiles_not_attached, "byrding_ramp_right", "bo_byrding_ramp_right", []),
 ("dyn_ship_ramp_right_busse",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_busse_ramp_right", []),  
 ("dyn_ship_ramp_right_skeid",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_hedeby1_ramp_right", []),
 ("dyn_ship_ramp_right_karvi",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_karvi_ramp_right", []),
 ("dyn_ship_ramp_right_snekkja",sokf_moveable|sokf_missiles_not_attached, "0", "bo_snekkja_ramp_right", []),
 ("dyn_ship_ramp_right_knorr",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_knorr_ramp_right", []), 	
 ("dyn_ship_ramp_right_byrding",sokf_moveable|sokf_missiles_not_attached, "0", "bo_byrding_ramp_right", []),
 ("dyn_ship_ramp_right_curragh",sokf_missiles_not_attached, "0", "0", []),
 ("dyn_ship_ramp_right_skeid2",	sokf_missiles_not_attached, "0", "0", []),
 ("dyn_ship_ramp_right_end",0, 0, 0, []),
	 # ("dyn_ship_ramp_left_busse",	sokf_moveable|sokf_missiles_not_attached, "busse_ramp_left", "bo_busse_ramp_left", []),  
	 # ("dyn_ship_ramp_left_skeid",	sokf_moveable|sokf_missiles_not_attached, "hedeby1_ramp_left", "bo_hedeby1_ramp_left", []),
	 # ("dyn_ship_ramp_left_karvi",	sokf_moveable|sokf_missiles_not_attached, "karvi_ramp_left", "bo_karvi_ramp_left", []),
	 # ("dyn_ship_ramp_left_snekkja",	sokf_moveable|sokf_missiles_not_attached, "snekkja_ramp_left", "bo_snekkja_ramp_left", []),
	 # ("dyn_ship_ramp_left_knorr",	sokf_moveable|sokf_missiles_not_attached, "knorr_ramp_left", "bo_knorr_ramp_left", []),
	 # ("dyn_ship_ramp_left_byrding",	sokf_moveable|sokf_missiles_not_attached, "byrding_ramp_left", "bo_byrding_ramp_left", []),
 ("dyn_ship_ramp_left_busse",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_busse_ramp_left", []),  
 ("dyn_ship_ramp_left_skeid",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_hedeby1_ramp_left", []),
 ("dyn_ship_ramp_left_karvi",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_karvi_ramp_left", []),
 ("dyn_ship_ramp_left_snekkja",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_snekkja_ramp_left", []),
 ("dyn_ship_ramp_left_knorr",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_knorr_ramp_left", []),
 ("dyn_ship_ramp_left_byrding",	sokf_moveable|sokf_missiles_not_attached, "0", "bo_byrding_ramp_left", []),
 ("dyn_ship_ramp_left_curragh",	sokf_missiles_not_attached, "0", "0", []),
 ("dyn_ship_ramp_left_skeid2",	sokf_missiles_not_attached, "0", "0", []),
 ("dyn_ship_ramp_left_end",0, 0, 0, []),
	 # ("dyn_ship_ramp_land_busse",	sokfs_ship_land_ramp, "busse_ramp_land", "bo_busse_ramp_land", []),  
	 # ("dyn_ship_ramp_land_skeid",	sokfs_ship_land_ramp, "hedeby1_ramp_land", "bo_hedeby1_ramp_land", []),
	 # ("dyn_ship_ramp_land_karvi",	sokfs_ship_land_ramp, "karvi_ramp_land", "bo_karvi_ramp_land", []),
	 # ("dyn_ship_ramp_land_snekkja",	sokfs_ship_land_ramp, "snekkja_ramp_land", "bo_snekkja_ramp_land", []),
	 # ("dyn_ship_ramp_land_knorr",	sokfs_ship_land_ramp, "knorr_ramp_land", "bo_knorr_ramp_land", []), 
	 # ("dyn_ship_ramp_land_byrding",	sokfs_ship_land_ramp, "byrding_ramp_land", "bo_byrding_ramp_land", []),
 ("dyn_ship_ramp_land_busse",	sokfs_ship_land_ramp, "0", "bo_busse_ramp_land", []),  
 ("dyn_ship_ramp_land_skeid",	sokfs_ship_land_ramp, "0", "bo_hedeby1_ramp_land", []),
 ("dyn_ship_ramp_land_karvi",	sokfs_ship_land_ramp, "0", "bo_karvi_ramp_land", []),
 ("dyn_ship_ramp_land_snekkja",	sokfs_ship_land_ramp, "0", "bo_snekkja_ramp_land", []),
 ("dyn_ship_ramp_land_knorr",	sokfs_ship_land_ramp, "0", "bo_knorr_ramp_land", []), 
 ("dyn_ship_ramp_land_byrding",	sokfs_ship_land_ramp, "0", "bo_byrding_ramp_land", []),
 ("dyn_ship_ramp_land_curragh",	sokf_missiles_not_attached|sokf_type_ladder, "0", "0", []),
 ("dyn_ship_ramp_land_skeid2",	sokf_missiles_not_attached|sokf_type_ladder, "0", "0", []),
 ("dyn_ship_ramp_land_end",0, 0, 0, []),
	 # ("dyn_ship_cage_right_busse",	sokfs_ship_cage, "busse_cage_right", "bo_busse_cage_right", []),  
	 # ("dyn_ship_cage_right_skeid",	sokfs_ship_cage, "hedeby1_cage_right", "bo_hedeby1_cage_right", []),
	 # ("dyn_ship_cage_right_karvi",	sokfs_ship_cage, "karvi_cage_right", "bo_karvi_cage_right", []),
	 # ("dyn_ship_cage_right_snekkja",sokfs_ship_cage, "snekkja_cage_right", "bo_snekkja_cage_right", []),
	 # ("dyn_ship_cage_right_knorr",	sokfs_ship_cage, "knorr_cage_right", "bo_knorr_cage_right", []),
	 # ("dyn_ship_cage_right_byrding",sokfs_ship_cage, "byrding_cage_right", "bo_byrding_cage_right", []),
 ("dyn_ship_cage_right_busse",	sokfs_ship_cage, "0", "bo_busse_cage_right", []),  
 ("dyn_ship_cage_right_skeid",	sokfs_ship_cage, "0", "bo_hedeby1_cage_right", []),
 ("dyn_ship_cage_right_karvi",	sokfs_ship_cage, "0", "bo_karvi_cage_right", []),
 ("dyn_ship_cage_right_snekkja",sokfs_ship_cage, "0", "bo_snekkja_cage_right", []),
 ("dyn_ship_cage_right_knorr",	sokfs_ship_cage, "0", "bo_knorr_cage_right", []),
 ("dyn_ship_cage_right_byrding",sokfs_ship_cage, "0", "bo_byrding_cage_right", []),
 ("dyn_ship_cage_right_curragh",sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_skeid2",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_end",0, 0, 0, []),
	 # ("dyn_ship_cage_right_2_busse",	sokfs_ship_cage, "busse_cage_right2", "bo_busse_cage_right2", []),  
	 # ("dyn_ship_cage_right_2_skeid",	sokfs_ship_cage, "hedeby1_cage_right2", "bo_hedeby1_cage_right2", []),
	 # ("dyn_ship_cage_right_2_karvi",	sokfs_ship_cage, "karvi_cage_right2", "bo_karvi_cage_right2", []),
	 # ("dyn_ship_cage_right_2_snekkja",	sokfs_ship_cage, "snekkja_cage_right2", "bo_snekkja_cage_right2", []),
	 # ("dyn_ship_cage_right_2_knorr",	sokfs_ship_cage, "knorr_cage_right2", "bo_knorr_cage_right2", []),
 ("dyn_ship_cage_right_2_busse",	sokfs_ship_cage, "0", "bo_busse_cage_right2", []),  
 ("dyn_ship_cage_right_2_skeid",	sokfs_ship_cage, "0", "bo_hedeby1_cage_right2", []),
 ("dyn_ship_cage_right_2_karvi",	sokfs_ship_cage, "0", "bo_karvi_cage_right2", []),
 ("dyn_ship_cage_right_2_snekkja",	sokfs_ship_cage, "0", "bo_snekkja_cage_right2", []),
 ("dyn_ship_cage_right_2_knorr",	sokfs_ship_cage, "0", "bo_knorr_cage_right2", []),
 ("dyn_ship_cage_right_2_byrding",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_2_curragh",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_2_skeid2",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_2_end",0, 0, 0, []),
	 # ("dyn_ship_cage_right_3_busse",	sokfs_ship_cage, "busse_cage_right3", "bo_busse_cage_right3", []),  
	 # ("dyn_ship_cage_right_3_skeid",	sokfs_ship_cage, "hedeby1_cage_right3", "bo_hedeby1_cage_right3", []),
 ("dyn_ship_cage_right_3_busse",	sokfs_ship_cage, "0", "bo_busse_cage_right3", []),  
 ("dyn_ship_cage_right_3_skeid",	sokfs_ship_cage, "0", "bo_hedeby1_cage_right3", []),
 ("dyn_ship_cage_right_3_karvi",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_3_snekkja",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_3_knorr",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_3_byrding",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_3_curragh",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_3_skeid2",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_right_3_end",0, 0, 0, []),
	 # ("dyn_ship_cage_left_busse",	sokfs_ship_cage, "busse_cage_left", "bo_busse_cage_left", []),  
	 # ("dyn_ship_cage_left_skeid",	sokfs_ship_cage, "hedeby1_cage_left", "bo_hedeby1_cage_left", []),
	 # ("dyn_ship_cage_left_karvi",	sokfs_ship_cage, "karvi_cage_left", "bo_karvi_cage_left", []),
	 # ("dyn_ship_cage_left_snekkja",	sokfs_ship_cage, "snekkja_cage_left", "bo_snekkja_cage_left", []),
	 # ("dyn_ship_cage_left_knorr",	sokfs_ship_cage, "knorr_cage_left", "bo_knorr_cage_left", []),
	 # ("dyn_ship_cage_left_byrding",	sokfs_ship_cage, "byrding_cage_left", "bo_byrding_cage_left", []),
 ("dyn_ship_cage_left_busse",	sokfs_ship_cage, "0", "bo_busse_cage_left", []),  
 ("dyn_ship_cage_left_skeid",	sokfs_ship_cage, "0", "bo_hedeby1_cage_left", []),
 ("dyn_ship_cage_left_karvi",	sokfs_ship_cage, "0", "bo_karvi_cage_left", []),
 ("dyn_ship_cage_left_snekkja",	sokfs_ship_cage, "0", "bo_snekkja_cage_left", []),
 ("dyn_ship_cage_left_knorr",	sokfs_ship_cage, "0", "bo_knorr_cage_left", []),
 ("dyn_ship_cage_left_byrding",	sokfs_ship_cage, "0", "bo_byrding_cage_left", []),
 ("dyn_ship_cage_left_curragh",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_skeid2",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_end",0, 0, 0, []),
	 # ("dyn_ship_cage_left_2_busse",		sokfs_ship_cage, "busse_cage_left2", "bo_busse_cage_left2", []),  
	 # ("dyn_ship_cage_left_2_skeid",		sokfs_ship_cage, "hedeby1_cage_left2", "bo_hedeby1_cage_left2", []),
	 # ("dyn_ship_cage_left_2_karvi",		sokfs_ship_cage, "karvi_cage_left2", "bo_karvi_cage_left2", []),
	 # ("dyn_ship_cage_left_2_snekkja",	sokfs_ship_cage, "snekkja_cage_left2", "bo_snekkja_cage_left2", []),
	 # ("dyn_ship_cage_left_2_knorr",		sokfs_ship_cage, "knorr_cage_left2", "bo_knorr_cage_left2", []),
 ("dyn_ship_cage_left_2_busse",		sokfs_ship_cage, "0", "bo_busse_cage_left2", []),  
 ("dyn_ship_cage_left_2_skeid",		sokfs_ship_cage, "0", "bo_hedeby1_cage_left2", []),
 ("dyn_ship_cage_left_2_karvi",		sokfs_ship_cage, "0", "bo_karvi_cage_left2", []),
 ("dyn_ship_cage_left_2_snekkja",	sokfs_ship_cage, "0", "bo_snekkja_cage_left2", []),
 ("dyn_ship_cage_left_2_knorr",		sokfs_ship_cage, "0", "bo_knorr_cage_left2", []),
 ("dyn_ship_cage_left_2_byrding",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_2_curragh",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_2_skeid2",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_2_end",0, 0, 0, []),
	 # ("dyn_ship_cage_left_3_busse",		sokfs_ship_cage, "busse_cage_left3", "bo_busse_cage_left3", []),  
	 # ("dyn_ship_cage_left_3_skeid",		sokfs_ship_cage, "hedeby1_cage_left3", "bo_hedeby1_cage_left3", []),
 ("dyn_ship_cage_left_3_busse",		sokfs_ship_cage, "0", "bo_busse_cage_left3", []),  
 ("dyn_ship_cage_left_3_skeid",		sokfs_ship_cage, "0", "bo_hedeby1_cage_left3", []),
 ("dyn_ship_cage_left_3_karvi",		sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_3_snekkja",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_3_knorr",		sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_3_byrding",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_3_curragh",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_3_skeid2",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_left_3_end",0, 0, 0, []),
	 # ("dyn_ship_cage_main_busse",	sokfs_ship_cage, "busse_cage_main", "bo_busse_cage_main", []),  
	 # ("dyn_ship_cage_main_skeid",	sokfs_ship_cage, "hedeby1_cage_main", "bo_hedeby1_cage_main", []),
	 # ("dyn_ship_cage_main_karvi",	sokfs_ship_cage, "karvi_cage_main", "bo_karvi_cage_main", []),
	 # ("dyn_ship_cage_main_snekkja",	sokfs_ship_cage, "snekkja_cage_main", "bo_snekkja_cage_main", []),
	 # ("dyn_ship_cage_main_knorr",	sokfs_ship_cage, "knorr_cage_main", "bo_knorr_cage_main", []), 
	 # ("dyn_ship_cage_main_byrding",	sokfs_ship_cage, "byrding_cage_main", "bo_byrding_cage_main", []),
 ("dyn_ship_cage_main_busse",	sokfs_ship_cage, "0", "bo_busse_cage_main", []),  
 ("dyn_ship_cage_main_skeid",	sokfs_ship_cage, "0", "bo_hedeby1_cage_main", []),
 ("dyn_ship_cage_main_karvi",	sokfs_ship_cage, "0", "bo_karvi_cage_main", []),
 ("dyn_ship_cage_main_snekkja",	sokfs_ship_cage, "0", "bo_snekkja_cage_main", []),
 ("dyn_ship_cage_main_knorr",	sokfs_ship_cage, "0", "bo_knorr_cage_main", []), 
 ("dyn_ship_cage_main_byrding",	sokfs_ship_cage, "0", "bo_byrding_cage_main", []),
 ("dyn_ship_cage_main_curragh",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_main_skeid2",	sokf_invisible, "0", "0", []),
 ("dyn_ship_cage_main_end",0, 0, 0, []), 
 
 #Cargo for ships:
 ("cargo_0_knorr",		sokf_dynamic, "knorr_cover", "0", []),
 ("cargo_1_knorr",		sokf_moveable, "knorr_cargo", "bo_knorr_cargo", []),
 ("cargo_1_byrding",	sokf_dynamic, "byrding_cargo", "0", []),
 
### ) PHAIAK end


 ("inv_supply_box",spr_use_time(1),"supply_box","bo_supply_box",[
  	(ti_on_scene_prop_start_use,[
		(multiplayer_is_server),
		(call_script,"script_supply_box_used",0),
     ]),
  	(ti_on_scene_prop_use,[
		(try_begin),
			(multiplayer_is_server),
			(call_script,"script_supply_box_used",1),
		(else_try),
			(store_trigger_param,":instance",2),
			(scene_prop_enable_after_time,":instance",100),
		(try_end),
     ]),
	]),
###SP scene animation spawn points
#VAR1= chance of spawning agent (0=33%, 1=spawn always, 2-99=percent value)
#VAR2= type of animation (0=random, 1=always first animation variation, 2=always second...)
 ("z_entry_tavern_sitting",		sokf_invisible,"entry_tavern","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_village_sitting",	sokf_invisible,"entry_tavern","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_military_sitting",	sokf_invisible,"entry_tavern","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_priest_sitting",		sokf_invisible,"entry_tavern","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_child_sitting",		sokf_invisible,"entry_tavern","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_fisherman_sitting",	sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),

 ("z_entry_woodcutting",			sokf_invisible,"entry_builder","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 
 ("z_code_coast",					sokf_invisible,"entry_builder","0",[]),
 ("z_entry_field_working_1",		sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_field_working_2",		sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_field_working_3",		sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_grinding",				sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_smith",					sokf_invisible,"entry_builder","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),

 ("z_entry_brooming",			sokf_invisible,"entry_broom","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 
 ("z_entry_cow",			sokf_invisible,"cow_1","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
 ("z_entry_horse",			sokf_invisible,"Horse_01","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),

 ("banner_a",0,"banner_extra01","0",[]),#fix for code in old scenes

  #New adorno's scene props 1.04
  ("ado_watchtower_wood",0,"ado_watchtower_wood","bo_ado_watchtower_wood", []),
  ("ado_watchtower_wood2",0,"ado_watchtower_wood2","bo_ado_watchtower_wood2", []),
  ("ado_nordic_cult_house",0,"ado_nordic_cult_house","bo_ado_nordic_cult_house", []),
  
  #New cage props 1.04 MP with ai_limiter flag
 # ("dyn_ship_mp_cage_right_busse",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_busse_cage_right", []),  
 # ("dyn_ship_mp_cage_right_skeid",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_hedeby1_cage_right", []),
 # ("dyn_ship_mp_cage_right_karvi",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_karvi_cage_right", []),
 # ("dyn_ship_mp_cage_right_snekkja",sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_snekkja_cage_right", []),
 # ("dyn_ship_mp_cage_right_knorr",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_knorr_cage_right", []),
 # ("dyn_ship_mp_cage_right_byrding",sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_byrding_cage_right", []),
 # ("dyn_ship_mp_cage_right_curragh",sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_skeid2",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_end",0, 0, 0, []),
 # ("dyn_ship_mp_cage_right_2_busse",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_busse_cage_right2", []),  
 # ("dyn_ship_mp_cage_right_2_skeid",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_hedeby1_cage_right2", []),
 # ("dyn_ship_mp_cage_right_2_karvi",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_karvi_cage_right2", []),
 # ("dyn_ship_mp_cage_right_2_snekkja",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_snekkja_cage_right2", []),
 # ("dyn_ship_mp_cage_right_2_knorr",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_knorr_cage_right2", []),
 # ("dyn_ship_mp_cage_right_2_byrding",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_2_curragh",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_2_skeid2",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_2_end",0, 0, 0, []),
 # ("dyn_ship_mp_cage_right_3_busse",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_busse_cage_right3", []),  
 # ("dyn_ship_mp_cage_right_3_skeid",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_hedeby1_cage_right3", []),
 # ("dyn_ship_mp_cage_right_3_karvi",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_3_snekkja",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_3_knorr",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_3_byrding",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_3_curragh",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_3_skeid2",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_right_3_end",0, 0, 0, []),
 # ("dyn_ship_mp_cage_left_busse",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_busse_cage_left", []),  
 # ("dyn_ship_mp_cage_left_skeid",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_hedeby1_cage_left", []),
 # ("dyn_ship_mp_cage_left_karvi",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_karvi_cage_left", []),
 # ("dyn_ship_mp_cage_left_snekkja",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_snekkja_cage_left", []),
 # ("dyn_ship_mp_cage_left_knorr",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_knorr_cage_left", []),
 # ("dyn_ship_mp_cage_left_byrding",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_byrding_cage_left", []),
 # ("dyn_ship_mp_cage_left_curragh",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_skeid2",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_end",0, 0, 0, []),
 # ("dyn_ship_mp_cage_left_2_busse",		sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_busse_cage_left2", []),  
 # ("dyn_ship_mp_cage_left_2_skeid",		sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_hedeby1_cage_left2", []),
 # ("dyn_ship_mp_cage_left_2_karvi",		sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_karvi_cage_left2", []),
 # ("dyn_ship_mp_cage_left_2_snekkja",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_snekkja_cage_left2", []),
 # ("dyn_ship_mp_cage_left_2_knorr",		sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_knorr_cage_left2", []),
 # ("dyn_ship_mp_cage_left_2_byrding",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_2_curragh",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_2_skeid2",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_2_end",0, 0, 0, []),
 # ("dyn_ship_mp_cage_left_3_busse",		sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_busse_cage_left3", []),  
 # ("dyn_ship_mp_cage_left_3_skeid",		sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_hedeby1_cage_left3", []),
 # ("dyn_ship_mp_cage_left_3_karvi",		sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_3_snekkja",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_3_knorr",		sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_3_byrding",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_3_curragh",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_3_skeid2",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_left_3_end",0, 0, 0, []),
 # ("dyn_ship_mp_cage_main_busse",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_busse_cage_main", []),  
 # ("dyn_ship_mp_cage_main_skeid",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_hedeby1_cage_main", []),
 # ("dyn_ship_mp_cage_main_karvi",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_karvi_cage_main", []),
 # ("dyn_ship_mp_cage_main_snekkja",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_snekkja_cage_main", []),
 # ("dyn_ship_mp_cage_main_knorr",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_knorr_cage_main", []), 
 # ("dyn_ship_mp_cage_main_byrding",	sokf_moveable|sokf_type_ai_limiter|sokf_invisible, "0", "bo_byrding_cage_main", []),
 # ("dyn_ship_mp_cage_main_curragh",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_main_skeid2",	sokf_invisible, "0", "0", []),
 # ("dyn_ship_mp_cage_main_end",0, 0, 0, []), 
  
######

  #New Props for Addon 1.05
  
  ("dummy_tree_1",sokf_destructible|sokf_moveable,"tree_16_b","bo_tree_16_b",   [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 200),
    ]),
   (ti_on_scene_prop_destroy,
    [
        (store_trigger_param_1, ":instance_no"),
        (prop_instance_get_starting_position, pos1, ":instance_no"),
		(try_begin),
			(neg|game_in_multiplayer_mode),
			(get_player_agent_no, ":player_agent"),
			(agent_get_position, 2, ":player_agent"),
			(assign, ":rotate_side", 85),
			(try_begin),
			  (position_is_behind_position, 2, 1),
			  (val_mul, ":rotate_side", -1),
			(try_end),
			(val_add, "$tutorial_num_total_dummies_destroyed", 10),
			(start_presentation, "prsnt_work_progress"),
		(try_end),
        (position_rotate_x, 1, ":rotate_side"),
        (prop_instance_animate_to_position, ":instance_no", 1, 300), #animate to position 1 in 0.7 second
        (play_sound, "snd_dummy_destroyed"),
    ]),
   (ti_on_scene_prop_hit,
    [
        
        # (store_trigger_param_2, ":damage"),
		(try_begin),
          (eq, "$player_is_working", 1),
		  (play_sound, "snd_hit_wood_wood"),
          (particle_system_burst, "psys_dummy_smoke", pos1, 2),
          (particle_system_burst, "psys_dummy_straw", pos1, 2),
		(else_try),
		  (store_trigger_param_1, ":instance_no"),
		  (prop_instance_refill_hit_points, ":instance_no"),
		(end_try),
		
		(get_player_agent_no, ":player_agent"),
		(agent_get_animation, ":animation", ":player_agent", 1),
		(try_begin),
          (this_or_next|eq, ":animation", "anim_release_overswing_twohanded"),
		  (eq, ":animation", "anim_release_overswing_twohanded_continue"),
		  (agent_set_animation, ":player_agent", "anim_blocked_overswing_twohanded"),
		(end_try),
    ]),
  ]),
  
  ("dummy_wood_a",sokf_destructible, "wood_a", "bo_wood_a",   [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 40),
    ]),
   (ti_on_scene_prop_destroy,
    [
        (store_trigger_param_1, ":instance_no"),
        (prop_instance_get_starting_position, pos1, ":instance_no"),
		(particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_straw", pos1, 10),
		(val_add, "$tutorial_num_total_dummies_destroyed", 2),
		(start_presentation, "prsnt_work_progress"),
        (play_sound, "snd_hit_wood_wood"),
		(play_sound, "snd_dummy_destroyed"),
		#(prop_instance_set_scale, ":instance_no", 0, 0, 0),
		(scene_prop_set_visibility, ":instance_no", 0),
		(position_rotate_y, pos1, 90),
		(position_rotate_x, pos1, 180),
		(position_move_z, pos1, 10, 1),
		(copy_position, pos2, pos1),
		(position_move_z, pos2, -15),
		(set_spawn_position, pos2), 
		(spawn_scene_prop, "spr_dummy_wood_b"),
		(position_rotate_x, pos1, 120),
		(copy_position, pos2, pos1),
		(position_move_z, pos2, -15),
		(set_spawn_position, pos2), 
		(spawn_scene_prop, "spr_dummy_wood_b"),
		(position_rotate_x, pos1, 120),
		(copy_position, pos2, pos1),
		(position_move_z, pos2, -15),
		(set_spawn_position, pos2), 
		(spawn_scene_prop, "spr_dummy_wood_b"),
    ]),
   (ti_on_scene_prop_hit,
    [
        
        # (store_trigger_param_2, ":damage"),
		(try_begin),
          (eq, "$player_is_working", 1),
		  (play_sound, "snd_hit_wood_wood"),
		(else_try),
		  (store_trigger_param_1, ":instance_no"),
		  (prop_instance_refill_hit_points, ":instance_no"),
		(end_try),
		
		(get_player_agent_no, ":player_agent"),
		(agent_set_attack_action, ":player_agent", -2, 0),
		# (agent_get_animation, ":animation", ":player_agent", 1),
		# (try_begin),
          # (this_or_next|eq, ":animation", "anim_release_overswing_twohanded"),
		  # (eq, ":animation", "anim_release_overswing_twohanded_continue"),
		  # (agent_set_animation, ":player_agent", "anim_parried_overswing_twohanded"),
		# (end_try),
    ]),
  ]),
  
  ("dummy_wood_b", sokf_moveable|sokf_dynamic_physics, "wood_b", "bo_wood_b_2", []),
  
  ("dummy_rock_1",sokf_destructible, "rock_d", "bo_rock_d",   [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 160),
    ]),
   (ti_on_scene_prop_destroy,
    [
		(store_trigger_param_1, ":instance_no"),
        (prop_instance_get_starting_position, pos1, ":instance_no"),
		(particle_system_burst, "psys_stone_hit_1", pos1, 100),
		# (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_stone", pos1, 10),
		(val_add, "$tutorial_num_total_dummies_destroyed", 8),
		(start_presentation, "prsnt_work_progress"),
		(play_sound, "snd_dummy_destroyed"),
		(prop_instance_get_scale, pos7, ":instance_no"),
		(position_get_scale_x, ":x", pos7),
		(position_get_scale_y, ":y", pos7),
		(position_get_scale_z, ":z", pos7),
		(set_spawn_position, pos1), 
		(spawn_scene_prop, "spr_dummy_rock_3"),
		(prop_instance_set_scale, reg0, ":x", ":y", ":z"),
		#(prop_instance_dynamics_set_properties, reg0, ),
		(scene_prop_set_visibility, ":instance_no", 0),
    ]),
   (ti_on_scene_prop_hit,
    [
        
        # (store_trigger_param_2, ":damage"),
		(try_begin),
          (eq, "$player_is_working", 1),
		  (play_sound, "snd_sword_clash_1"),
		  (particle_system_burst, "psys_stone_hit_1", pos1, 10),
		  (particle_system_burst, "psys_dummy_stone", pos1, 10),
          #(particle_system_burst, "psys_dummy_straw", pos1, 2),
		(else_try),
		  (store_trigger_param_1, ":instance_no"),
		  (prop_instance_refill_hit_points, ":instance_no"),
		(end_try),
    ]),
  ]),
  
  ("dummy_rock_2",sokf_destructible, "rock_g", "bo_rock_g",   [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 200),
    ]),
   (ti_on_scene_prop_destroy,
    [

		(store_trigger_param_1, ":instance_no"),
        (prop_instance_get_starting_position, pos1, ":instance_no"),
		(particle_system_burst, "psys_stone_hit_1", pos1, 100),
		# (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        # (particle_system_burst, "psys_dummy_straw", pos1, 10),
		(val_add, "$tutorial_num_total_dummies_destroyed", 10),
		(start_presentation, "prsnt_work_progress"),
		(play_sound, "snd_dummy_destroyed"),
		# (prop_instance_set_scale, ":instance_no", 1, 1, 1),
		(scene_prop_set_visibility, ":instance_no", 0),
		(position_move_z, pos1, 100, 1),
		# (position_move_x, pos1, 50),
		# (position_move_y, pos1, 50),
		(position_rotate_y, pos1, 90),
		(position_rotate_x, pos1, 180),
		# (position_rotate_y, pos1, 90),
		# (position_rotate_x, pos1, 180),
		(copy_position, pos2, pos1),
		(position_move_z, pos2, 50),
		(set_spawn_position, pos2), 
		(spawn_scene_prop, "spr_dummy_rock_3"),
		(prop_instance_set_scale, reg0, 80, 70, 60),
		(position_rotate_x, pos1, 120),
		(copy_position, pos2, pos1),
		(position_move_z, pos2, 50),
		(position_rotate_y, pos2, -20),
		(set_spawn_position, pos2), 
		(spawn_scene_prop, "spr_dummy_rock_3"),
		(prop_instance_set_scale, reg0, 70, 80, 60),
		(position_rotate_x, pos1, 120),
		(copy_position, pos2, pos1),
		(position_move_z, pos2, 50),
		(position_rotate_y, pos2, -20),
		(set_spawn_position, pos2), 
		(spawn_scene_prop, "spr_dummy_rock_3"),
		(prop_instance_set_scale, reg0, 60, 70, 80),
    ]),
   (ti_on_scene_prop_hit,
    [
        
        # (store_trigger_param_2, ":damage"),
		(try_begin),
          (eq, "$player_is_working", 1),
		  (play_sound, "snd_sword_clash_1"),
		  (particle_system_burst, "psys_stone_hit_1", pos1, 10),
          #(particle_system_burst, "psys_dummy_straw", pos1, 2),
		(else_try),
		  (store_trigger_param_1, ":instance_no"),
		  (prop_instance_refill_hit_points, ":instance_no"),
		(end_try),
    ]),
  ]),
  
  ("dummy_rock_3", sokf_moveable|sokf_dynamic_physics, "rock_d", "bo_rock_d_2", []),
  
  ("dummy_salt_1",sokf_destructible, "rock_d_salt", "bo_rock_d",   [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 200),
    ]),
   (ti_on_scene_prop_destroy,
    [
		(store_trigger_param_1, ":instance_no"),
        (prop_instance_get_starting_position, pos1, ":instance_no"),
		(particle_system_burst, "psys_stone_hit_1", pos1, 100),
		# (particle_system_burst, "psys_dummy_smoke", pos1, 3),
        (particle_system_burst, "psys_dummy_stone", pos1, 5),
		(particle_system_burst, "psys_dummy_salt", pos1, 10),
		(val_add, "$tutorial_num_total_dummies_destroyed", 10),
		(start_presentation, "prsnt_work_progress"),
		(play_sound, "snd_dummy_destroyed"),
		(prop_instance_get_scale, pos7, ":instance_no"),
		(position_get_scale_x, ":x", pos7),
		(position_get_scale_y, ":y", pos7),
		(position_get_scale_z, ":z", pos7),
		(set_spawn_position, pos1), 
		(spawn_scene_prop, "spr_dummy_salt_2"),
		(prop_instance_set_scale, reg0, ":x", ":y", ":z"),
		#(prop_instance_dynamics_set_properties, reg0, ),
		(scene_prop_set_visibility, ":instance_no", 0),
    ]),
   (ti_on_scene_prop_hit,
    [
        
        # (store_trigger_param_2, ":damage"),
		(try_begin),
          (eq, "$player_is_working", 1),
		  (play_sound, "snd_incoming_stone_hit_ground"),
		  (particle_system_burst, "psys_stone_hit_1", pos1, 10),
		  (particle_system_burst, "psys_dummy_stone", pos1, 5),
		  (particle_system_burst, "psys_dummy_salt", pos1, 10),
          #(particle_system_burst, "psys_dummy_straw", pos1, 2),
		(else_try),
		  (store_trigger_param_1, ":instance_no"),
		  (prop_instance_refill_hit_points, ":instance_no"),
		(end_try),
    ]),
  ]),
  
  ("dummy_salt_2", sokf_moveable|sokf_dynamic_physics, "rock_d_salt", "bo_rock_d_2", []),
  
  ("dummy_straw_1",sokf_destructible, "straw_b", "bo_straw_b_2",   [
   (ti_on_init_scene_prop,
    [
      (store_trigger_param_1, ":instance_no"),
      (scene_prop_set_hit_points, ":instance_no", 140),	#always tutorial_num_total_dummies_destroyed * 20
    ]),
   (ti_on_scene_prop_destroy,
    [
		(store_trigger_param_1, ":instance_no"),
        (prop_instance_get_starting_position, pos1, ":instance_no"),
		(particle_system_burst, "psys_dummy_straw", pos1, 50),
		(val_add, "$tutorial_num_total_dummies_destroyed", 7),
		(start_presentation, "prsnt_work_progress"),
		#(play_sound, "snd_dummy_destroyed"),
		(set_spawn_position, pos1), 
		(spawn_scene_prop, "spr_straw_a"),
		# (prop_instance_set_scale, reg0, 150, ":y", ":z"),
		(scene_prop_set_visibility, ":instance_no", 0),
    ]),
   (ti_on_scene_prop_hit,
    [
        
        # (store_trigger_param_2, ":damage"),
		(try_begin),
          (eq, "$player_is_working", 1),
		  (play_sound, "snd_incoming_knife_hit_ground"),
		  (particle_system_burst, "psys_dummy_straw", pos1, 10),
		(else_try),
		  (store_trigger_param_1, ":instance_no"),
		  (prop_instance_refill_hit_points, ":instance_no"),
		(end_try),
    ]),
  ]),
  
  ("z_entry_pig",			sokf_invisible,"animal_pig","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
  ("z_entry_piglet",		sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
  ("z_entry_sheep",			sokf_invisible,"animal_sheep_a_2","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
  ("z_entry_dog",			sokf_invisible,"animal_dog","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),
  ("z_entry_ship",			sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[])]),
  ("z_entry_ship_small",	sokf_invisible,"entry_farmer","0",[(ti_on_init_scene_prop,[])]),
  ("z_entry_feast_sitting", sokf_invisible,"entry_tavern","0",[(ti_on_init_scene_prop,[(call_script,"script_cf_prop_spawn_agent")])]),#spawns agents only when center is having a symbel (feast)
  
  ("ai_limiter_3d", sokf_type_ai_limiter3d|sokf_invisible,"barrier_ship","bo_barrier_ship", []),
  
  ###MP scene code props
  ("z_code_time_and_weather",sokf_invisible,"entry_builder","0",[]),
  ("z_code_season",sokf_invisible,"entry_builder","0",[]),
  ("z_code_scene_sounds",sokf_invisible,"entry_builder","0",[]),
  ("mp_stones_refill",spr_use_time(1),"rock1","bo_rock1",[
		(ti_on_scene_prop_use,[
			(try_begin),
				(multiplayer_is_server),
				(store_trigger_param_1,":agent"),
				(agent_is_active,":agent"),
				(assign,":num_stones",0),
				(try_for_range,":slot",0,4),
					(agent_get_item_slot,":item",":agent",":slot"),
					(eq,":item","itm_stones_mp"),
					(val_add,":num_stones",1),
				(try_end),
				(agent_get_wielded_item,":wielded",":agent",0),
				(try_begin),
					(gt,":num_stones",0),
					(agent_unequip_item,":agent","itm_stones_mp"),
					(try_for_range,":slot",0,":num_stones"),
						(agent_equip_item,":agent","itm_stones_mp"),
					(try_end),
					(eq,":wielded","itm_stones_mp"),
					(agent_set_wielded_item,":agent",":wielded"),
				(try_end),
			(try_end),
			(store_trigger_param,":instance",2),
			(scene_prop_enable_after_time,":instance",100),
			#(display_message,"@stones refilled"),
		 ]),
	]),
  
  ("locked_chest_a", 0,"chest_gothic","bochest_gothic", []),#VC-3474
  
]
